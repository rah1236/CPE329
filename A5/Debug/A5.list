
A5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001828  080001ac  080001ac  000011ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  080019d4  080019d4  000029d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001a14  08001a14  0000300c  2**0
                  CONTENTS
  4 .ARM          00000000  08001a14  08001a14  0000300c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001a14  08001a14  0000300c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001a14  08001a14  00002a14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001a18  08001a18  00002a18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08001a1c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  2000000c  08001a28  0000300c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  08001a28  00003030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000479d  00000000  00000000  0000303c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00001142  00000000  00000000  000077d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000598  00000000  00000000  00008920  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000412  00000000  00000000  00008eb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00028001  00000000  00000000  000092ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00006193  00000000  00000000  000312cb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000f212b  00000000  00000000  0003745e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00129589  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001414  00000000  00000000  001295cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000051  00000000  00000000  0012a9e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	@ (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	@ (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	2000000c 	.word	0x2000000c
 80001c8:	00000000 	.word	0x00000000
 80001cc:	080019bc 	.word	0x080019bc

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	@ (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	@ (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	@ (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000010 	.word	0x20000010
 80001e8:	080019bc 	.word	0x080019bc

080001ec <SPI_init>:
#include "dac.h"
void SPI_init( void ) {
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	// SPI config as specified @ STM32L4 RM0351 rev.9 p.1459
	// called by or with DAC_init()
	// build control registers CR1 & CR2 for SPI control of peripheral DAC
	// assumes no active SPI xmits & no recv data in process (BSY=0)
	// CR1 (reset value = 0x0000)
	SPI1->CR1 &= ~( SPI_CR1_SPE ); // disable SPI for config
 80001f0:	4b23      	ldr	r3, [pc, #140]	@ (8000280 <SPI_init+0x94>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a22      	ldr	r2, [pc, #136]	@ (8000280 <SPI_init+0x94>)
 80001f6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80001fa:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~( SPI_CR1_RXONLY ); // recv-only OFF
 80001fc:	4b20      	ldr	r3, [pc, #128]	@ (8000280 <SPI_init+0x94>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a1f      	ldr	r2, [pc, #124]	@ (8000280 <SPI_init+0x94>)
 8000202:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8000206:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~( SPI_CR1_LSBFIRST ); // data bit order MSb:LSb
 8000208:	4b1d      	ldr	r3, [pc, #116]	@ (8000280 <SPI_init+0x94>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a1c      	ldr	r2, [pc, #112]	@ (8000280 <SPI_init+0x94>)
 800020e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000212:	6013      	str	r3, [r2, #0]
	SPI1->CR1 &= ~( SPI_CR1_CPOL | SPI_CR1_CPHA ); // SCLK polarity:phase = 0:0
 8000214:	4b1a      	ldr	r3, [pc, #104]	@ (8000280 <SPI_init+0x94>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a19      	ldr	r2, [pc, #100]	@ (8000280 <SPI_init+0x94>)
 800021a:	f023 0303 	bic.w	r3, r3, #3
 800021e:	6013      	str	r3, [r2, #0]
	SPI1->CR1 |= SPI_CR1_MSTR; // MCU is SPI controller
 8000220:	4b17      	ldr	r3, [pc, #92]	@ (8000280 <SPI_init+0x94>)
 8000222:	681b      	ldr	r3, [r3, #0]
 8000224:	4a16      	ldr	r2, [pc, #88]	@ (8000280 <SPI_init+0x94>)
 8000226:	f043 0304 	orr.w	r3, r3, #4
 800022a:	6013      	str	r3, [r2, #0]
	// CR2 (reset value = 0x0700 : 8b data)
	SPI1->CR2 &= ~( SPI_CR2_TXEIE | SPI_CR2_RXNEIE ); // disable FIFO intrpts
 800022c:	4b14      	ldr	r3, [pc, #80]	@ (8000280 <SPI_init+0x94>)
 800022e:	685b      	ldr	r3, [r3, #4]
 8000230:	4a13      	ldr	r2, [pc, #76]	@ (8000280 <SPI_init+0x94>)
 8000232:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
 8000236:	6053      	str	r3, [r2, #4]
	SPI1->CR2 &= ~( SPI_CR2_FRF); // Moto frame format
 8000238:	4b11      	ldr	r3, [pc, #68]	@ (8000280 <SPI_init+0x94>)
 800023a:	685b      	ldr	r3, [r3, #4]
 800023c:	4a10      	ldr	r2, [pc, #64]	@ (8000280 <SPI_init+0x94>)
 800023e:	f023 0310 	bic.w	r3, r3, #16
 8000242:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |= SPI_CR2_NSSP; // auto-generate NSS pulse
 8000244:	4b0e      	ldr	r3, [pc, #56]	@ (8000280 <SPI_init+0x94>)
 8000246:	685b      	ldr	r3, [r3, #4]
 8000248:	4a0d      	ldr	r2, [pc, #52]	@ (8000280 <SPI_init+0x94>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |= SPI_CR2_DS; // 16-bit data
 8000250:	4b0b      	ldr	r3, [pc, #44]	@ (8000280 <SPI_init+0x94>)
 8000252:	685b      	ldr	r3, [r3, #4]
 8000254:	4a0a      	ldr	r2, [pc, #40]	@ (8000280 <SPI_init+0x94>)
 8000256:	f443 6370 	orr.w	r3, r3, #3840	@ 0xf00
 800025a:	6053      	str	r3, [r2, #4]
	SPI1->CR2 |= SPI_CR2_SSOE; // enable SS output
 800025c:	4b08      	ldr	r3, [pc, #32]	@ (8000280 <SPI_init+0x94>)
 800025e:	685b      	ldr	r3, [r3, #4]
 8000260:	4a07      	ldr	r2, [pc, #28]	@ (8000280 <SPI_init+0x94>)
 8000262:	f043 0304 	orr.w	r3, r3, #4
 8000266:	6053      	str	r3, [r2, #4]
	// CR1
	SPI1->CR1 |= SPI_CR1_SPE; // re-enable SPI for ops
 8000268:	4b05      	ldr	r3, [pc, #20]	@ (8000280 <SPI_init+0x94>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a04      	ldr	r2, [pc, #16]	@ (8000280 <SPI_init+0x94>)
 800026e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000272:	6013      	str	r3, [r2, #0]
}
 8000274:	bf00      	nop
 8000276:	46bd      	mov	sp, r7
 8000278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop
 8000280:	40013000 	.word	0x40013000

08000284 <DAC_Init>:

void DAC_Init( void ) {
 8000284:	b580      	push	{r7, lr}
 8000286:	af00      	add	r7, sp, #0
	// enable clock for GPIOA & SPI1
	RCC->AHB2ENR |= (RCC_AHB2ENR_GPIOAEN); // GPIOA: DAC NSS/SCK/SDO
 8000288:	4b3f      	ldr	r3, [pc, #252]	@ (8000388 <DAC_Init+0x104>)
 800028a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800028c:	4a3e      	ldr	r2, [pc, #248]	@ (8000388 <DAC_Init+0x104>)
 800028e:	f043 0301 	orr.w	r3, r3, #1
 8000292:	64d3      	str	r3, [r2, #76]	@ 0x4c
	RCC->APB2ENR |= (RCC_APB2ENR_SPI1EN); // SPI1 port
 8000294:	4b3c      	ldr	r3, [pc, #240]	@ (8000388 <DAC_Init+0x104>)
 8000296:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8000298:	4a3b      	ldr	r2, [pc, #236]	@ (8000388 <DAC_Init+0x104>)
 800029a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 800029e:	6613      	str	r3, [r2, #96]	@ 0x60
	/* USER ADD GPIO configuration of MODER/PUPDR/OTYPER/OSPEEDR registers HERE */
	GPIOA->MODER &= ~( GPIO_MODER_MODE4 |
 80002a0:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80002a4:	681b      	ldr	r3, [r3, #0]
 80002a6:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80002aa:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80002ae:	f023 030c 	bic.w	r3, r3, #12
 80002b2:	6013      	str	r3, [r2, #0]
					   GPIO_MODER_MODE5 |
					   GPIO_MODER_MODE6 |
					   GPIO_MODER_MODE7 |
					   GPIO_MODER_MODE1 );
	GPIOA->MODER |= ( GPIO_MODER_MODE4_0 |
 80002b4:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80002b8:	681b      	ldr	r3, [r3, #0]
 80002ba:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80002be:	f443 4329 	orr.w	r3, r3, #43264	@ 0xa900
 80002c2:	f043 0304 	orr.w	r3, r3, #4
 80002c6:	6013      	str	r3, [r2, #0]
					  GPIO_MODER_MODE5_1 |
					  GPIO_MODER_MODE6_1 |
					  GPIO_MODER_MODE7_1 |
					  GPIO_MODER_MODE1_0 );
	GPIOA->PUPDR &= ~( GPIO_PUPDR_PUPD4 |
 80002c8:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80002cc:	68db      	ldr	r3, [r3, #12]
 80002ce:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80002d2:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80002d6:	f023 030c 	bic.w	r3, r3, #12
 80002da:	60d3      	str	r3, [r2, #12]
					   GPIO_PUPDR_PUPD5 |
			   	   	   GPIO_PUPDR_PUPD6 |
					   GPIO_PUPDR_PUPD7 |
					   GPIO_PUPDR_PUPD1 );
	GPIOA->PUPDR |= ( GPIO_PUPDR_PUPD6_1 );
 80002dc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80002e0:	68db      	ldr	r3, [r3, #12]
 80002e2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80002e6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80002ea:	60d3      	str	r3, [r2, #12]
	GPIOA->OTYPER &= ~( GPIO_OTYPER_OT4 |
 80002ec:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80002f0:	685b      	ldr	r3, [r3, #4]
 80002f2:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80002f6:	f023 03f2 	bic.w	r3, r3, #242	@ 0xf2
 80002fa:	6053      	str	r3, [r2, #4]
						GPIO_OTYPER_OT5 |
						GPIO_OTYPER_OT6 |
						GPIO_OTYPER_OT7 |
						GPIO_OTYPER_OT1 );
	GPIOA->OSPEEDR |= ( ( 3 << GPIO_OSPEEDR_OSPEED4_Pos ) |
 80002fc:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000300:	689b      	ldr	r3, [r3, #8]
 8000302:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000306:	f443 437f 	orr.w	r3, r3, #65280	@ 0xff00
 800030a:	f043 030c 	orr.w	r3, r3, #12
 800030e:	6093      	str	r3, [r2, #8]
						( 3 << GPIO_OSPEEDR_OSPEED5_Pos ) |
						( 3 << GPIO_OSPEEDR_OSPEED6_Pos ) |
						( 3 << GPIO_OSPEEDR_OSPEED7_Pos ) |
						( 3 << GPIO_OSPEEDR_OSPEED1_Pos ) );
	// configure AFR for SPI1 function (1 of 3 SPI bits shown here)
	GPIOA->AFR[0] &= ~((0x000F << GPIO_AFRL_AFSEL5_Pos));
 8000310:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000314:	6a1b      	ldr	r3, [r3, #32]
 8000316:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800031a:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 800031e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~((0x000F << GPIO_AFRL_AFSEL6_Pos));
 8000320:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000324:	6a1b      	ldr	r3, [r3, #32]
 8000326:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800032a:	f023 6370 	bic.w	r3, r3, #251658240	@ 0xf000000
 800032e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= ~((0x000F << GPIO_AFRL_AFSEL7_Pos)); // clear nibble for bit 7 AF
 8000330:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000334:	6a1b      	ldr	r3, [r3, #32]
 8000336:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800033a:	f023 4370 	bic.w	r3, r3, #4026531840	@ 0xf0000000
 800033e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= ((0x0005 << GPIO_AFRL_AFSEL5_Pos));
 8000340:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000344:	6a1b      	ldr	r3, [r3, #32]
 8000346:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800034a:	f443 03a0 	orr.w	r3, r3, #5242880	@ 0x500000
 800034e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= ((0x0005 << GPIO_AFRL_AFSEL6_Pos));
 8000350:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000354:	6a1b      	ldr	r3, [r3, #32]
 8000356:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800035a:	f043 63a0 	orr.w	r3, r3, #83886080	@ 0x5000000
 800035e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= ((0x0005 << GPIO_AFRL_AFSEL7_Pos)); // set b7 AF to SPI1 (fcn 5)
 8000360:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000364:	6a1b      	ldr	r3, [r3, #32]
 8000366:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800036a:	f043 43a0 	orr.w	r3, r3, #1342177280	@ 0x50000000
 800036e:	6213      	str	r3, [r2, #32]
	SPI_init();
 8000370:	f7ff ff3c 	bl	80001ec <SPI_init>
	DAC_PORT->BSRR |= ( CS | PS );
 8000374:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 8000378:	699b      	ldr	r3, [r3, #24]
 800037a:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 800037e:	f043 0312 	orr.w	r3, r3, #18
 8000382:	6193      	str	r3, [r2, #24]
}
 8000384:	bf00      	nop
 8000386:	bd80      	pop	{r7, pc}
 8000388:	40021000 	.word	0x40021000

0800038c <DAC_volt_conv>:
dac_data_type DAC_volt_conv( dac_data_type millivolts_requested ) {
 800038c:	b480      	push	{r7}
 800038e:	b085      	sub	sp, #20
 8000390:	af00      	add	r7, sp, #0
 8000392:	6078      	str	r0, [r7, #4]
	dac_data_type dac_word_out = ( millivolts_requested * (4112 / 4096) ) - 6;
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	3b06      	subs	r3, #6
 8000398:	60fb      	str	r3, [r7, #12]
	if (dac_word_out > 3300){
 800039a:	68fb      	ldr	r3, [r7, #12]
 800039c:	f640 42e4 	movw	r2, #3300	@ 0xce4
 80003a0:	4293      	cmp	r3, r2
 80003a2:	d902      	bls.n	80003aa <DAC_volt_conv+0x1e>
		dac_word_out = 3300;
 80003a4:	f640 43e4 	movw	r3, #3300	@ 0xce4
 80003a8:	60fb      	str	r3, [r7, #12]
	}
	return ( dac_word_out );
 80003aa:	68fb      	ldr	r3, [r7, #12]
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	3714      	adds	r7, #20
 80003b0:	46bd      	mov	sp, r7
 80003b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b6:	4770      	bx	lr

080003b8 <DAC_write>:
void DAC_write ( uint16_t data ) {
 80003b8:	b480      	push	{r7}
 80003ba:	b083      	sub	sp, #12
 80003bc:	af00      	add	r7, sp, #0
 80003be:	4603      	mov	r3, r0
 80003c0:	80fb      	strh	r3, [r7, #6]
	data &= 0x0FFF;
 80003c2:	88fb      	ldrh	r3, [r7, #6]
 80003c4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80003c8:	80fb      	strh	r3, [r7, #6]
	data |= ( 0x01 << 12 );		//set gain to 1, disable shutdown mode
 80003ca:	88fb      	ldrh	r3, [r7, #6]
 80003cc:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80003d0:	80fb      	strh	r3, [r7, #6]
	DAC_PORT->BRR |= CS;	//set CS low to start sending data
 80003d2:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 80003d6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80003d8:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 80003dc:	f043 0302 	orr.w	r3, r3, #2
 80003e0:	6293      	str	r3, [r2, #40]	@ 0x28
	while ( !( SPI1->SR & SPI_SR_TXE ) )
 80003e2:	bf00      	nop
 80003e4:	4b13      	ldr	r3, [pc, #76]	@ (8000434 <DAC_write+0x7c>)
 80003e6:	689b      	ldr	r3, [r3, #8]
 80003e8:	f003 0302 	and.w	r3, r3, #2
 80003ec:	2b00      	cmp	r3, #0
 80003ee:	d0f9      	beq.n	80003e4 <DAC_write+0x2c>
		;					//wait for empty transmit buffer
	SPI1->DR |= data;
 80003f0:	4b10      	ldr	r3, [pc, #64]	@ (8000434 <DAC_write+0x7c>)
 80003f2:	68da      	ldr	r2, [r3, #12]
 80003f4:	88fb      	ldrh	r3, [r7, #6]
 80003f6:	490f      	ldr	r1, [pc, #60]	@ (8000434 <DAC_write+0x7c>)
 80003f8:	4313      	orrs	r3, r2
 80003fa:	60cb      	str	r3, [r1, #12]
	while ( !( SPI1->SR & SPI_SR_TXE ) )
 80003fc:	bf00      	nop
 80003fe:	4b0d      	ldr	r3, [pc, #52]	@ (8000434 <DAC_write+0x7c>)
 8000400:	689b      	ldr	r3, [r3, #8]
 8000402:	f003 0302 	and.w	r3, r3, #2
 8000406:	2b00      	cmp	r3, #0
 8000408:	d0f9      	beq.n	80003fe <DAC_write+0x46>
		;
	while ( SPI1->SR & SPI_SR_BSY )
 800040a:	bf00      	nop
 800040c:	4b09      	ldr	r3, [pc, #36]	@ (8000434 <DAC_write+0x7c>)
 800040e:	689b      	ldr	r3, [r3, #8]
 8000410:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000414:	2b00      	cmp	r3, #0
 8000416:	d1f9      	bne.n	800040c <DAC_write+0x54>
		;
	DAC_PORT->BSRR |= CS; //end data transmission, switch ~CS back to high
 8000418:	f04f 4390 	mov.w	r3, #1207959552	@ 0x48000000
 800041c:	699b      	ldr	r3, [r3, #24]
 800041e:	f04f 4290 	mov.w	r2, #1207959552	@ 0x48000000
 8000422:	f043 0302 	orr.w	r3, r3, #2
 8000426:	6193      	str	r3, [r2, #24]
}
 8000428:	bf00      	nop
 800042a:	370c      	adds	r7, #12
 800042c:	46bd      	mov	sp, r7
 800042e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000432:	4770      	bx	lr
 8000434:	40013000 	.word	0x40013000

08000438 <Keypad_Init>:
uint8_t Keypad_CheckKeyPressed(uint8_t column_row_byte);



// Use to initialize Keypad GPIO and other funcitonality of keypad
void Keypad_Init(void){
 8000438:	b480      	push	{r7}
 800043a:	af00      	add	r7, sp, #0
	// configure GPIO pins PC0, PC1, PC2, PC3 for:
	// output mode, push-pull, no pull up or pull down, high speed
	RCC->AHB2ENR   |=  (RCC_AHB2ENR_GPIOCEN);
 800043c:	4b1d      	ldr	r3, [pc, #116]	@ (80004b4 <Keypad_Init+0x7c>)
 800043e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000440:	4a1c      	ldr	r2, [pc, #112]	@ (80004b4 <Keypad_Init+0x7c>)
 8000442:	f043 0304 	orr.w	r3, r3, #4
 8000446:	64d3      	str	r3, [r2, #76]	@ 0x4c
	GPIOC->MODER   &= ~(GPIO_MODER_MODE0 | GPIO_MODER_MODE1 | GPIO_MODER_MODE2 | GPIO_MODER_MODE3 );
 8000448:	4b1b      	ldr	r3, [pc, #108]	@ (80004b8 <Keypad_Init+0x80>)
 800044a:	681b      	ldr	r3, [r3, #0]
 800044c:	4a1a      	ldr	r2, [pc, #104]	@ (80004b8 <Keypad_Init+0x80>)
 800044e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8000452:	6013      	str	r3, [r2, #0]
	GPIOC->MODER   |=  (GPIO_MODER_MODE0_0 | GPIO_MODER_MODE1_0 | GPIO_MODER_MODE2_0 | GPIO_MODER_MODE3_0);
 8000454:	4b18      	ldr	r3, [pc, #96]	@ (80004b8 <Keypad_Init+0x80>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	4a17      	ldr	r2, [pc, #92]	@ (80004b8 <Keypad_Init+0x80>)
 800045a:	f043 0355 	orr.w	r3, r3, #85	@ 0x55
 800045e:	6013      	str	r3, [r2, #0]
	GPIOC->OTYPER  &= ~(GPIO_OTYPER_OT0 | GPIO_OTYPER_OT1 | GPIO_OTYPER_OT2 | GPIO_OTYPER_OT3);
 8000460:	4b15      	ldr	r3, [pc, #84]	@ (80004b8 <Keypad_Init+0x80>)
 8000462:	685b      	ldr	r3, [r3, #4]
 8000464:	4a14      	ldr	r2, [pc, #80]	@ (80004b8 <Keypad_Init+0x80>)
 8000466:	f023 030f 	bic.w	r3, r3, #15
 800046a:	6053      	str	r3, [r2, #4]
	GPIOC->PUPDR   &= ~(GPIO_PUPDR_PUPD0 | GPIO_PUPDR_PUPD1 | GPIO_PUPDR_PUPD2 | GPIO_PUPDR_PUPD3);
 800046c:	4b12      	ldr	r3, [pc, #72]	@ (80004b8 <Keypad_Init+0x80>)
 800046e:	68db      	ldr	r3, [r3, #12]
 8000470:	4a11      	ldr	r2, [pc, #68]	@ (80004b8 <Keypad_Init+0x80>)
 8000472:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8000476:	60d3      	str	r3, [r2, #12]
	GPIOC->OSPEEDR |=  ((3 << GPIO_OSPEEDR_OSPEED0_Pos) |
 8000478:	4b0f      	ldr	r3, [pc, #60]	@ (80004b8 <Keypad_Init+0x80>)
 800047a:	689b      	ldr	r3, [r3, #8]
 800047c:	4a0e      	ldr	r2, [pc, #56]	@ (80004b8 <Keypad_Init+0x80>)
 800047e:	f043 03ff 	orr.w	r3, r3, #255	@ 0xff
 8000482:	6093      	str	r3, [r2, #8]
							  (3 << GPIO_OSPEEDR_OSPEED1_Pos) |
							  (3 << GPIO_OSPEEDR_OSPEED2_Pos) |
							  (3 << GPIO_OSPEEDR_OSPEED3_Pos));

	// configure GPIO pins PC4, PC5, PC6 for Input, with pull down
	GPIOC->MODER   &= ~(GPIO_MODER_MODE4 | GPIO_MODER_MODE5 | GPIO_MODER_MODE6 );
 8000484:	4b0c      	ldr	r3, [pc, #48]	@ (80004b8 <Keypad_Init+0x80>)
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	4a0b      	ldr	r2, [pc, #44]	@ (80004b8 <Keypad_Init+0x80>)
 800048a:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800048e:	6013      	str	r3, [r2, #0]
	GPIOC->PUPDR |= (GPIO_PUPDR_PUPD4_1 | GPIO_PUPDR_PUPD5_1 | GPIO_PUPDR_PUPD6_1);
 8000490:	4b09      	ldr	r3, [pc, #36]	@ (80004b8 <Keypad_Init+0x80>)
 8000492:	68db      	ldr	r3, [r3, #12]
 8000494:	4a08      	ldr	r2, [pc, #32]	@ (80004b8 <Keypad_Init+0x80>)
 8000496:	f443 5328 	orr.w	r3, r3, #10752	@ 0x2a00
 800049a:	60d3      	str	r3, [r2, #12]


	 // preset PC0, PC1, PC2, PC3 to 0
	GPIOC->BRR |= (GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 );
 800049c:	4b06      	ldr	r3, [pc, #24]	@ (80004b8 <Keypad_Init+0x80>)
 800049e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80004a0:	4a05      	ldr	r2, [pc, #20]	@ (80004b8 <Keypad_Init+0x80>)
 80004a2:	f043 030f 	orr.w	r3, r3, #15
 80004a6:	6293      	str	r3, [r2, #40]	@ 0x28

}
 80004a8:	bf00      	nop
 80004aa:	46bd      	mov	sp, r7
 80004ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004b0:	4770      	bx	lr
 80004b2:	bf00      	nop
 80004b4:	40021000 	.word	0x40021000
 80004b8:	48000800 	.word	0x48000800

080004bc <Keypad_CheckKeyPressed>:
 *                                  N/A   Row     Column
 *  BEWARNED: Row data is a standard integer, it counts up to 4,
 *  Column data is BITWISE!!!, bit 0 represents column 1, bit 1 column 2, etc
 *  This function returns chars relating to which key is pressed
 */
uint8_t Keypad_CheckKeyPressed(uint8_t column_row_byte){
 80004bc:	b480      	push	{r7}
 80004be:	b085      	sub	sp, #20
 80004c0:	af00      	add	r7, sp, #0
 80004c2:	4603      	mov	r3, r0
 80004c4:	71fb      	strb	r3, [r7, #7]

	uint8_t var;

	switch (column_row_byte) {
 80004c6:	79fb      	ldrb	r3, [r7, #7]
 80004c8:	3b01      	subs	r3, #1
 80004ca:	2b1b      	cmp	r3, #27
 80004cc:	d85e      	bhi.n	800058c <Keypad_CheckKeyPressed+0xd0>
 80004ce:	a201      	add	r2, pc, #4	@ (adr r2, 80004d4 <Keypad_CheckKeyPressed+0x18>)
 80004d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80004d4:	08000545 	.word	0x08000545
 80004d8:	0800054b 	.word	0x0800054b
 80004dc:	0800058d 	.word	0x0800058d
 80004e0:	08000551 	.word	0x08000551
 80004e4:	0800058d 	.word	0x0800058d
 80004e8:	0800058d 	.word	0x0800058d
 80004ec:	0800058d 	.word	0x0800058d
 80004f0:	0800058d 	.word	0x0800058d
 80004f4:	08000557 	.word	0x08000557
 80004f8:	0800055d 	.word	0x0800055d
 80004fc:	0800058d 	.word	0x0800058d
 8000500:	08000563 	.word	0x08000563
 8000504:	0800058d 	.word	0x0800058d
 8000508:	0800058d 	.word	0x0800058d
 800050c:	0800058d 	.word	0x0800058d
 8000510:	0800058d 	.word	0x0800058d
 8000514:	08000569 	.word	0x08000569
 8000518:	0800056f 	.word	0x0800056f
 800051c:	0800058d 	.word	0x0800058d
 8000520:	08000575 	.word	0x08000575
 8000524:	0800058d 	.word	0x0800058d
 8000528:	0800058d 	.word	0x0800058d
 800052c:	0800058d 	.word	0x0800058d
 8000530:	0800058d 	.word	0x0800058d
 8000534:	0800057b 	.word	0x0800057b
 8000538:	08000581 	.word	0x08000581
 800053c:	0800058d 	.word	0x0800058d
 8000540:	08000587 	.word	0x08000587
	  case 0x01: //Column 1, Row 1
		  var = ('1');
 8000544:	2331      	movs	r3, #49	@ 0x31
 8000546:	73fb      	strb	r3, [r7, #15]
		  break;
 8000548:	e023      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>
	  case 0x02: //Column 2, Row 1
		  var = ('2');
 800054a:	2332      	movs	r3, #50	@ 0x32
 800054c:	73fb      	strb	r3, [r7, #15]
		  break;
 800054e:	e020      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x04: //Column 3, Row 1
		  var = ('3');
 8000550:	2333      	movs	r3, #51	@ 0x33
 8000552:	73fb      	strb	r3, [r7, #15]
		  break;
 8000554:	e01d      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x09: //Column 1, Row 2
		  var = ('4');
 8000556:	2334      	movs	r3, #52	@ 0x34
 8000558:	73fb      	strb	r3, [r7, #15]
		  break;
 800055a:	e01a      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x0a: //Column 2, Row 2
		  var = ('5');
 800055c:	2335      	movs	r3, #53	@ 0x35
 800055e:	73fb      	strb	r3, [r7, #15]
		  break;
 8000560:	e017      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x0c: //Column 3, Row 2
		  var = ('6');
 8000562:	2336      	movs	r3, #54	@ 0x36
 8000564:	73fb      	strb	r3, [r7, #15]
		  break;
 8000566:	e014      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x11: //Column 1, Row 3
		  var = ('7');
 8000568:	2337      	movs	r3, #55	@ 0x37
 800056a:	73fb      	strb	r3, [r7, #15]
		  break;
 800056c:	e011      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x12: //Column 2, Row 3
		  var = ('8');
 800056e:	2338      	movs	r3, #56	@ 0x38
 8000570:	73fb      	strb	r3, [r7, #15]
		  break;
 8000572:	e00e      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x14: //Column 2, Row 3
		  var = ('9');
 8000574:	2339      	movs	r3, #57	@ 0x39
 8000576:	73fb      	strb	r3, [r7, #15]
		  break;
 8000578:	e00b      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x19: //Column 1, Row 4
		  var = ('*');
 800057a:	232a      	movs	r3, #42	@ 0x2a
 800057c:	73fb      	strb	r3, [r7, #15]
		  break;
 800057e:	e008      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x1a: //Column 2, Row 4
		  var = ('0');
 8000580:	2330      	movs	r3, #48	@ 0x30
 8000582:	73fb      	strb	r3, [r7, #15]
		  break;
 8000584:	e005      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  case 0x1c: //Column 3, Row 4
		  var = ('#');
 8000586:	2323      	movs	r3, #35	@ 0x23
 8000588:	73fb      	strb	r3, [r7, #15]
		  break;
 800058a:	e002      	b.n	8000592 <Keypad_CheckKeyPressed+0xd6>

	  default:
		  var = ('.'); //period for no press
 800058c:	232e      	movs	r3, #46	@ 0x2e
 800058e:	73fb      	strb	r3, [r7, #15]
		  break;
 8000590:	bf00      	nop
	}

	return var;
 8000592:	7bfb      	ldrb	r3, [r7, #15]
}
 8000594:	4618      	mov	r0, r3
 8000596:	3714      	adds	r7, #20
 8000598:	46bd      	mov	sp, r7
 800059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059e:	4770      	bx	lr

080005a0 <Keypad_Read>:
/* The function Keypad_Read polls through the keypad row pins a total of
 *  DEBOUNCE_ELEMENTS * 3 times, and returns the most recently
 *  consistently pressed key.
 *
 */
uint8_t Keypad_Read(void){
 80005a0:	b580      	push	{r7, lr}
 80005a2:	b086      	sub	sp, #24
 80005a4:	af00      	add	r7, sp, #0
	uint8_t last_key_pressed;
	uint8_t current_key_pressed;


	//Run the polling code DEBOUNCE_ELEMENTS number of times
	for(int debounce_round = 0; debounce_round < DEBOUNCE_ELEMENTS; debounce_round++){
 80005a6:	2300      	movs	r3, #0
 80005a8:	60fb      	str	r3, [r7, #12]
 80005aa:	e033      	b.n	8000614 <Keypad_Read+0x74>
		// Poll through 4 rows
		for(int polled_row = 0; polled_row < ROWS; polled_row++){
 80005ac:	2300      	movs	r3, #0
 80005ae:	60bb      	str	r3, [r7, #8]
 80005b0:	e02a      	b.n	8000608 <Keypad_Read+0x68>

			//Set current polled row high
			GPIOC->ODR = (1 << polled_row);
 80005b2:	2201      	movs	r2, #1
 80005b4:	68bb      	ldr	r3, [r7, #8]
 80005b6:	409a      	lsls	r2, r3
 80005b8:	4b1d      	ldr	r3, [pc, #116]	@ (8000630 <Keypad_Read+0x90>)
 80005ba:	615a      	str	r2, [r3, #20]

			//Get currently pressed key in encoded form
			encoded_key_pressed = (polled_row<<3) | ((GPIOC->IDR >> 4));
 80005bc:	68bb      	ldr	r3, [r7, #8]
 80005be:	b2db      	uxtb	r3, r3
 80005c0:	00db      	lsls	r3, r3, #3
 80005c2:	b2da      	uxtb	r2, r3
 80005c4:	4b1a      	ldr	r3, [pc, #104]	@ (8000630 <Keypad_Read+0x90>)
 80005c6:	691b      	ldr	r3, [r3, #16]
 80005c8:	091b      	lsrs	r3, r3, #4
 80005ca:	b2db      	uxtb	r3, r3
 80005cc:	4313      	orrs	r3, r2
 80005ce:	71fb      	strb	r3, [r7, #7]

			// if a key was pressed
			if (Keypad_CheckKeyPressed(encoded_key_pressed) != '.'){
 80005d0:	79fb      	ldrb	r3, [r7, #7]
 80005d2:	4618      	mov	r0, r3
 80005d4:	f7ff ff72 	bl	80004bc <Keypad_CheckKeyPressed>
 80005d8:	4603      	mov	r3, r0
 80005da:	2b2e      	cmp	r3, #46	@ 0x2e
 80005dc:	d005      	beq.n	80005ea <Keypad_Read+0x4a>
				// record WHICH key was pressed
				current_key_pressed = Keypad_CheckKeyPressed(encoded_key_pressed);
 80005de:	79fb      	ldrb	r3, [r7, #7]
 80005e0:	4618      	mov	r0, r3
 80005e2:	f7ff ff6b 	bl	80004bc <Keypad_CheckKeyPressed>
 80005e6:	4603      	mov	r3, r0
 80005e8:	74bb      	strb	r3, [r7, #18]
			}

			//if the last key pressed isn't the same as the current key pressed
			if (last_key_pressed != current_key_pressed){
 80005ea:	7cfa      	ldrb	r2, [r7, #19]
 80005ec:	7cbb      	ldrb	r3, [r7, #18]
 80005ee:	429a      	cmp	r2, r3
 80005f0:	d003      	beq.n	80005fa <Keypad_Read+0x5a>
				//Record the change
				number_of_key_changes++;
 80005f2:	697b      	ldr	r3, [r7, #20]
 80005f4:	3301      	adds	r3, #1
 80005f6:	617b      	str	r3, [r7, #20]
 80005f8:	e001      	b.n	80005fe <Keypad_Read+0x5e>
			}
			//if the last key pressed is the same as the current key pressed,
			else {
				//Reset the change counter
				number_of_key_changes = 0;
 80005fa:	2300      	movs	r3, #0
 80005fc:	617b      	str	r3, [r7, #20]
			}

			//Set the current key pressed to be the last key pressed before polling again
			last_key_pressed = current_key_pressed;
 80005fe:	7cbb      	ldrb	r3, [r7, #18]
 8000600:	74fb      	strb	r3, [r7, #19]
		for(int polled_row = 0; polled_row < ROWS; polled_row++){
 8000602:	68bb      	ldr	r3, [r7, #8]
 8000604:	3301      	adds	r3, #1
 8000606:	60bb      	str	r3, [r7, #8]
 8000608:	68bb      	ldr	r3, [r7, #8]
 800060a:	2b03      	cmp	r3, #3
 800060c:	ddd1      	ble.n	80005b2 <Keypad_Read+0x12>
	for(int debounce_round = 0; debounce_round < DEBOUNCE_ELEMENTS; debounce_round++){
 800060e:	68fb      	ldr	r3, [r7, #12]
 8000610:	3301      	adds	r3, #1
 8000612:	60fb      	str	r3, [r7, #12]
 8000614:	68fb      	ldr	r3, [r7, #12]
 8000616:	2b31      	cmp	r3, #49	@ 0x31
 8000618:	ddc8      	ble.n	80005ac <Keypad_Read+0xc>
		}
	}
		//If the last key pressed hasn't changed in DEBOUNCE_ELEMENTS number of polling cycles
		//return the last key pressed, otherwise, return the null character
		return((number_of_key_changes == 0) ? last_key_pressed : '\0');
 800061a:	697b      	ldr	r3, [r7, #20]
 800061c:	2b00      	cmp	r3, #0
 800061e:	d101      	bne.n	8000624 <Keypad_Read+0x84>
 8000620:	7cfb      	ldrb	r3, [r7, #19]
 8000622:	e000      	b.n	8000626 <Keypad_Read+0x86>
 8000624:	2300      	movs	r3, #0


}
 8000626:	4618      	mov	r0, r3
 8000628:	3718      	adds	r7, #24
 800062a:	46bd      	mov	sp, r7
 800062c:	bd80      	pop	{r7, pc}
 800062e:	bf00      	nop
 8000630:	48000800 	.word	0x48000800

08000634 <main>:
void setup_user_LEDs_PBSW(void);
int ginumRecv = 0;
int giNumFlag = 0;

int main(void)
{
 8000634:	b580      	push	{r7, lr}
 8000636:	b086      	sub	sp, #24
 8000638:	af00      	add	r7, sp, #0
 HAL_Init();
 800063a:	f000 f9ce 	bl	80009da <HAL_Init>
 SystemClock_Config();
 800063e:	f000 f8a5 	bl	800078c <SystemClock_Config>
 Keypad_Init();
 8000642:	f7ff fef9 	bl	8000438 <Keypad_Init>
 setup_user_LEDs_PBSW();
 8000646:	f000 f8e9 	bl	800081c <setup_user_LEDs_PBSW>
 DAC_Init();
 800064a:	f7ff fe1b 	bl	8000284 <DAC_Init>
 DAC_write(0);
 800064e:	2000      	movs	r0, #0
 8000650:	f7ff feb2 	bl	80003b8 <DAC_write>
 int iVoltage = 0;
 8000654:	2300      	movs	r3, #0
 8000656:	617b      	str	r3, [r7, #20]
 int iCount = 0;
 8000658:	2300      	movs	r3, #0
 800065a:	613b      	str	r3, [r7, #16]
 uint8_t keyPressed;
 uint8_t lastKeyPressed;

 while (1)
 {
	 keyPressed = Keypad_Read();
 800065c:	f7ff ffa0 	bl	80005a0 <Keypad_Read>
 8000660:	4603      	mov	r3, r0
 8000662:	73bb      	strb	r3, [r7, #14]

	 if ( (keyPressed != lastKeyPressed) && (keyPressed != '\0') && (keyPressed != '*') ){
 8000664:	7bba      	ldrb	r2, [r7, #14]
 8000666:	7bfb      	ldrb	r3, [r7, #15]
 8000668:	429a      	cmp	r2, r3
 800066a:	d03f      	beq.n	80006ec <main+0xb8>
 800066c:	7bbb      	ldrb	r3, [r7, #14]
 800066e:	2b00      	cmp	r3, #0
 8000670:	d03c      	beq.n	80006ec <main+0xb8>
 8000672:	7bbb      	ldrb	r3, [r7, #14]
 8000674:	2b2a      	cmp	r3, #42	@ 0x2a
 8000676:	d039      	beq.n	80006ec <main+0xb8>
		 ginumRecv = keyPressed & 0x0F;
 8000678:	7bbb      	ldrb	r3, [r7, #14]
 800067a:	f003 030f 	and.w	r3, r3, #15
 800067e:	4a41      	ldr	r2, [pc, #260]	@ (8000784 <main+0x150>)
 8000680:	6013      	str	r3, [r2, #0]
			  switch( iCount ) {
 8000682:	693b      	ldr	r3, [r7, #16]
 8000684:	2b02      	cmp	r3, #2
 8000686:	d022      	beq.n	80006ce <main+0x9a>
 8000688:	693b      	ldr	r3, [r7, #16]
 800068a:	2b02      	cmp	r3, #2
 800068c:	dc2d      	bgt.n	80006ea <main+0xb6>
 800068e:	693b      	ldr	r3, [r7, #16]
 8000690:	2b00      	cmp	r3, #0
 8000692:	d003      	beq.n	800069c <main+0x68>
 8000694:	693b      	ldr	r3, [r7, #16]
 8000696:	2b01      	cmp	r3, #1
 8000698:	d00d      	beq.n	80006b6 <main+0x82>
				  //voltage value in tens of mV
				  iVoltage += ( 10 * ginumRecv );
				  iCount++;
				  break;
			  default:
				  break;
 800069a:	e026      	b.n	80006ea <main+0xb6>
				  iVoltage += ( 1000 * ginumRecv );
 800069c:	4b39      	ldr	r3, [pc, #228]	@ (8000784 <main+0x150>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 80006a4:	fb02 f303 	mul.w	r3, r2, r3
 80006a8:	697a      	ldr	r2, [r7, #20]
 80006aa:	4413      	add	r3, r2
 80006ac:	617b      	str	r3, [r7, #20]
				  iCount++;
 80006ae:	693b      	ldr	r3, [r7, #16]
 80006b0:	3301      	adds	r3, #1
 80006b2:	613b      	str	r3, [r7, #16]
				  break;
 80006b4:	e01a      	b.n	80006ec <main+0xb8>
				  iVoltage += ( 100 * ginumRecv );
 80006b6:	4b33      	ldr	r3, [pc, #204]	@ (8000784 <main+0x150>)
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	2264      	movs	r2, #100	@ 0x64
 80006bc:	fb02 f303 	mul.w	r3, r2, r3
 80006c0:	697a      	ldr	r2, [r7, #20]
 80006c2:	4413      	add	r3, r2
 80006c4:	617b      	str	r3, [r7, #20]
				  iCount++;
 80006c6:	693b      	ldr	r3, [r7, #16]
 80006c8:	3301      	adds	r3, #1
 80006ca:	613b      	str	r3, [r7, #16]
				  break;
 80006cc:	e00e      	b.n	80006ec <main+0xb8>
				  iVoltage += ( 10 * ginumRecv );
 80006ce:	4b2d      	ldr	r3, [pc, #180]	@ (8000784 <main+0x150>)
 80006d0:	681a      	ldr	r2, [r3, #0]
 80006d2:	4613      	mov	r3, r2
 80006d4:	009b      	lsls	r3, r3, #2
 80006d6:	4413      	add	r3, r2
 80006d8:	005b      	lsls	r3, r3, #1
 80006da:	461a      	mov	r2, r3
 80006dc:	697b      	ldr	r3, [r7, #20]
 80006de:	4413      	add	r3, r2
 80006e0:	617b      	str	r3, [r7, #20]
				  iCount++;
 80006e2:	693b      	ldr	r3, [r7, #16]
 80006e4:	3301      	adds	r3, #1
 80006e6:	613b      	str	r3, [r7, #16]
				  break;
 80006e8:	e000      	b.n	80006ec <main+0xb8>
				  break;
 80006ea:	bf00      	nop
			  }
		  }

		  if ( (keyPressed == '*') && (keyPressed != lastKeyPressed) ){
 80006ec:	7bbb      	ldrb	r3, [r7, #14]
 80006ee:	2b2a      	cmp	r3, #42	@ 0x2a
 80006f0:	d10d      	bne.n	800070e <main+0xda>
 80006f2:	7bba      	ldrb	r2, [r7, #14]
 80006f4:	7bfb      	ldrb	r3, [r7, #15]
 80006f6:	429a      	cmp	r2, r3
 80006f8:	d009      	beq.n	800070e <main+0xda>
			  iCount = 0;
 80006fa:	2300      	movs	r3, #0
 80006fc:	613b      	str	r3, [r7, #16]
			  iVoltage = 0;
 80006fe:	2300      	movs	r3, #0
 8000700:	617b      	str	r3, [r7, #20]
			  GPIOB->ODR &= ~GPIO_PIN_7;
 8000702:	4b21      	ldr	r3, [pc, #132]	@ (8000788 <main+0x154>)
 8000704:	695b      	ldr	r3, [r3, #20]
 8000706:	4a20      	ldr	r2, [pc, #128]	@ (8000788 <main+0x154>)
 8000708:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800070c:	6153      	str	r3, [r2, #20]
		  }

		  //User has finished inputting desired voltage (in mV)
	 	  if(iCount >= 3){
 800070e:	693b      	ldr	r3, [r7, #16]
 8000710:	2b02      	cmp	r3, #2
 8000712:	dd33      	ble.n	800077c <main+0x148>
	 		 GPIOB->ODR |= GPIO_PIN_7;
 8000714:	4b1c      	ldr	r3, [pc, #112]	@ (8000788 <main+0x154>)
 8000716:	695b      	ldr	r3, [r3, #20]
 8000718:	4a1b      	ldr	r2, [pc, #108]	@ (8000788 <main+0x154>)
 800071a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800071e:	6153      	str	r3, [r2, #20]
	 		  if ((iVoltage <= 3300) && (iVoltage != 0) ){
 8000720:	697b      	ldr	r3, [r7, #20]
 8000722:	f640 42e4 	movw	r2, #3300	@ 0xce4
 8000726:	4293      	cmp	r3, r2
 8000728:	dc0d      	bgt.n	8000746 <main+0x112>
 800072a:	697b      	ldr	r3, [r7, #20]
 800072c:	2b00      	cmp	r3, #0
 800072e:	d00a      	beq.n	8000746 <main+0x112>
				  dac_data_type iDacVolt = DAC_volt_conv( iVoltage );
 8000730:	697b      	ldr	r3, [r7, #20]
 8000732:	4618      	mov	r0, r3
 8000734:	f7ff fe2a 	bl	800038c <DAC_volt_conv>
 8000738:	60b8      	str	r0, [r7, #8]
				  DAC_write( iDacVolt );
 800073a:	68bb      	ldr	r3, [r7, #8]
 800073c:	b29b      	uxth	r3, r3
 800073e:	4618      	mov	r0, r3
 8000740:	f7ff fe3a 	bl	80003b8 <DAC_write>
	 		  if ((iVoltage <= 3300) && (iVoltage != 0) ){
 8000744:	e01a      	b.n	800077c <main+0x148>
	 		  }
	 		  else if (iVoltage == 0){
 8000746:	697b      	ldr	r3, [r7, #20]
 8000748:	2b00      	cmp	r3, #0
 800074a:	d103      	bne.n	8000754 <main+0x120>
				  DAC_write( 0 );
 800074c:	2000      	movs	r0, #0
 800074e:	f7ff fe33 	bl	80003b8 <DAC_write>
 8000752:	e013      	b.n	800077c <main+0x148>
	 		  }
	 		  else if (iVoltage > 3300){
 8000754:	697b      	ldr	r3, [r7, #20]
 8000756:	f640 42e4 	movw	r2, #3300	@ 0xce4
 800075a:	4293      	cmp	r3, r2
 800075c:	dd04      	ble.n	8000768 <main+0x134>
					  DAC_write( 3300 );
 800075e:	f640 40e4 	movw	r0, #3300	@ 0xce4
 8000762:	f7ff fe29 	bl	80003b8 <DAC_write>
 8000766:	e009      	b.n	800077c <main+0x148>
		 		  }
	 		  else {
					  dac_data_type iDacVolt = DAC_volt_conv( iVoltage );
 8000768:	697b      	ldr	r3, [r7, #20]
 800076a:	4618      	mov	r0, r3
 800076c:	f7ff fe0e 	bl	800038c <DAC_volt_conv>
 8000770:	6078      	str	r0, [r7, #4]
					  DAC_write( iVoltage );
 8000772:	697b      	ldr	r3, [r7, #20]
 8000774:	b29b      	uxth	r3, r3
 8000776:	4618      	mov	r0, r3
 8000778:	f7ff fe1e 	bl	80003b8 <DAC_write>
			  }


	 	  }
	 	lastKeyPressed = keyPressed;
 800077c:	7bbb      	ldrb	r3, [r7, #14]
 800077e:	73fb      	strb	r3, [r7, #15]
	 keyPressed = Keypad_Read();
 8000780:	e76c      	b.n	800065c <main+0x28>
 8000782:	bf00      	nop
 8000784:	20000028 	.word	0x20000028
 8000788:	48000400 	.word	0x48000400

0800078c <SystemClock_Config>:
/**
 * @brief System Clock Configuration
 * @retval None
 */
void SystemClock_Config(void)
{
 800078c:	b580      	push	{r7, lr}
 800078e:	b096      	sub	sp, #88	@ 0x58
 8000790:	af00      	add	r7, sp, #0
 RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000792:	f107 0314 	add.w	r3, r7, #20
 8000796:	2244      	movs	r2, #68	@ 0x44
 8000798:	2100      	movs	r1, #0
 800079a:	4618      	mov	r0, r3
 800079c:	f001 f8e2 	bl	8001964 <memset>
 RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80007a0:	463b      	mov	r3, r7
 80007a2:	2200      	movs	r2, #0
 80007a4:	601a      	str	r2, [r3, #0]
 80007a6:	605a      	str	r2, [r3, #4]
 80007a8:	609a      	str	r2, [r3, #8]
 80007aa:	60da      	str	r2, [r3, #12]
 80007ac:	611a      	str	r2, [r3, #16]
 /** Configure the main internal regulator output voltage
 */
 if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 80007ae:	f44f 7000 	mov.w	r0, #512	@ 0x200
 80007b2:	f000 fa7b 	bl	8000cac <HAL_PWREx_ControlVoltageScaling>
 80007b6:	4603      	mov	r3, r0
 80007b8:	2b00      	cmp	r3, #0
 80007ba:	d001      	beq.n	80007c0 <SystemClock_Config+0x34>
 {
   Error_Handler();
 80007bc:	f000 f878 	bl	80008b0 <Error_Handler>
 }
 /** Initializes the RCC Oscillators according to the specified parameters
 * in the RCC_OscInitTypeDef structure.
 */
 RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 80007c0:	2310      	movs	r3, #16
 80007c2:	617b      	str	r3, [r7, #20]
 RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 80007c4:	2301      	movs	r3, #1
 80007c6:	62fb      	str	r3, [r7, #44]	@ 0x2c
 RCC_OscInitStruct.MSICalibrationValue = 0;
 80007c8:	2300      	movs	r3, #0
 80007ca:	633b      	str	r3, [r7, #48]	@ 0x30
 RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 80007cc:	2360      	movs	r3, #96	@ 0x60
 80007ce:	637b      	str	r3, [r7, #52]	@ 0x34
 RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80007d0:	2300      	movs	r3, #0
 80007d2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80007d4:	f107 0314 	add.w	r3, r7, #20
 80007d8:	4618      	mov	r0, r3
 80007da:	f000 fabd 	bl	8000d58 <HAL_RCC_OscConfig>
 80007de:	4603      	mov	r3, r0
 80007e0:	2b00      	cmp	r3, #0
 80007e2:	d001      	beq.n	80007e8 <SystemClock_Config+0x5c>
 {
   Error_Handler();
 80007e4:	f000 f864 	bl	80008b0 <Error_Handler>
 }
 /** Initializes the CPU, AHB and APB buses clocks
 */
 RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80007e8:	230f      	movs	r3, #15
 80007ea:	603b      	str	r3, [r7, #0]
                             |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 80007ec:	2300      	movs	r3, #0
 80007ee:	607b      	str	r3, [r7, #4]
 RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80007f0:	2300      	movs	r3, #0
 80007f2:	60bb      	str	r3, [r7, #8]
 RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 80007f4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80007f8:	60fb      	str	r3, [r7, #12]
 RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80007fa:	2300      	movs	r3, #0
 80007fc:	613b      	str	r3, [r7, #16]
 if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80007fe:	463b      	mov	r3, r7
 8000800:	2100      	movs	r1, #0
 8000802:	4618      	mov	r0, r3
 8000804:	f000 fec2 	bl	800158c <HAL_RCC_ClockConfig>
 8000808:	4603      	mov	r3, r0
 800080a:	2b00      	cmp	r3, #0
 800080c:	d001      	beq.n	8000812 <SystemClock_Config+0x86>
 {
   Error_Handler();
 800080e:	f000 f84f 	bl	80008b0 <Error_Handler>
 }
}
 8000812:	bf00      	nop
 8000814:	3758      	adds	r7, #88	@ 0x58
 8000816:	46bd      	mov	sp, r7
 8000818:	bd80      	pop	{r7, pc}
	...

0800081c <setup_user_LEDs_PBSW>:
 * @param None
 * @retval None
 */
/* USER CODE BEGIN 4 */

void setup_user_LEDs_PBSW(void) {
 800081c:	b480      	push	{r7}
 800081e:	af00      	add	r7, sp, #0
	RCC->AHB2ENR |= ( RCC_AHB2ENR_GPIOBEN |
 8000820:	4b20      	ldr	r3, [pc, #128]	@ (80008a4 <setup_user_LEDs_PBSW+0x88>)
 8000822:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000824:	4a1f      	ldr	r2, [pc, #124]	@ (80008a4 <setup_user_LEDs_PBSW+0x88>)
 8000826:	f043 0306 	orr.w	r3, r3, #6
 800082a:	64d3      	str	r3, [r2, #76]	@ 0x4c
					  RCC_AHB2ENR_GPIOCEN );
	GPIOB->MODER &= ~GPIO_MODER_MODE7;
 800082c:	4b1e      	ldr	r3, [pc, #120]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800082e:	681b      	ldr	r3, [r3, #0]
 8000830:	4a1d      	ldr	r2, [pc, #116]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 8000832:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8000836:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |= GPIO_MODER_MODE7_0;
 8000838:	4b1b      	ldr	r3, [pc, #108]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800083a:	681b      	ldr	r3, [r3, #0]
 800083c:	4a1a      	ldr	r2, [pc, #104]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800083e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8000842:	6013      	str	r3, [r2, #0]
	GPIOB->OTYPER &= ~GPIO_OTYPER_OT7;
 8000844:	4b18      	ldr	r3, [pc, #96]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 8000846:	685b      	ldr	r3, [r3, #4]
 8000848:	4a17      	ldr	r2, [pc, #92]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800084a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800084e:	6053      	str	r3, [r2, #4]
	GPIOB->PUPDR &= ~GPIO_PUPDR_PUPD7;
 8000850:	4b15      	ldr	r3, [pc, #84]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 8000852:	68db      	ldr	r3, [r3, #12]
 8000854:	4a14      	ldr	r2, [pc, #80]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 8000856:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800085a:	60d3      	str	r3, [r2, #12]
	GPIOB->OSPEEDR |= ( 3 << GPIO_OSPEEDR_OSPEED7_Pos );
 800085c:	4b12      	ldr	r3, [pc, #72]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800085e:	689b      	ldr	r3, [r3, #8]
 8000860:	4a11      	ldr	r2, [pc, #68]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 8000862:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000866:	6093      	str	r3, [r2, #8]
	GPIOB->BRR |= GPIO_PIN_7;
 8000868:	4b0f      	ldr	r3, [pc, #60]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800086a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800086c:	4a0e      	ldr	r2, [pc, #56]	@ (80008a8 <setup_user_LEDs_PBSW+0x8c>)
 800086e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000872:	6293      	str	r3, [r2, #40]	@ 0x28
	GPIOC->MODER &= ~GPIO_MODER_MODE13;
 8000874:	4b0d      	ldr	r3, [pc, #52]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 8000876:	681b      	ldr	r3, [r3, #0]
 8000878:	4a0c      	ldr	r2, [pc, #48]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 800087a:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800087e:	6013      	str	r3, [r2, #0]
	GPIOC->PUPDR &= ~GPIO_PUPDR_PUPD13;
 8000880:	4b0a      	ldr	r3, [pc, #40]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 8000882:	68db      	ldr	r3, [r3, #12]
 8000884:	4a09      	ldr	r2, [pc, #36]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 8000886:	f023 6340 	bic.w	r3, r3, #201326592	@ 0xc000000
 800088a:	60d3      	str	r3, [r2, #12]
	GPIOC->PUPDR |= GPIO_PUPDR_PUPD13_1;
 800088c:	4b07      	ldr	r3, [pc, #28]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 800088e:	68db      	ldr	r3, [r3, #12]
 8000890:	4a06      	ldr	r2, [pc, #24]	@ (80008ac <setup_user_LEDs_PBSW+0x90>)
 8000892:	f043 6300 	orr.w	r3, r3, #134217728	@ 0x8000000
 8000896:	60d3      	str	r3, [r2, #12]
}
 8000898:	bf00      	nop
 800089a:	46bd      	mov	sp, r7
 800089c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008a0:	4770      	bx	lr
 80008a2:	bf00      	nop
 80008a4:	40021000 	.word	0x40021000
 80008a8:	48000400 	.word	0x48000400
 80008ac:	48000800 	.word	0x48000800

080008b0 <Error_Handler>:
/**
 * @brief  This function is executed in case of error occurrence.
 * @retval None
 */
void Error_Handler(void)
{
 80008b0:	b480      	push	{r7}
 80008b2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80008b4:	b672      	cpsid	i
}
 80008b6:	bf00      	nop
 /* USER CODE BEGIN Error_Handler_Debug */
 /* User can add his own implementation to report the HAL error return state */
 __disable_irq();
 while (1)
 80008b8:	bf00      	nop
 80008ba:	e7fd      	b.n	80008b8 <Error_Handler+0x8>

080008bc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80008bc:	b480      	push	{r7}
 80008be:	b083      	sub	sp, #12
 80008c0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80008c2:	4b0f      	ldr	r3, [pc, #60]	@ (8000900 <HAL_MspInit+0x44>)
 80008c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80008c6:	4a0e      	ldr	r2, [pc, #56]	@ (8000900 <HAL_MspInit+0x44>)
 80008c8:	f043 0301 	orr.w	r3, r3, #1
 80008cc:	6613      	str	r3, [r2, #96]	@ 0x60
 80008ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000900 <HAL_MspInit+0x44>)
 80008d0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80008d2:	f003 0301 	and.w	r3, r3, #1
 80008d6:	607b      	str	r3, [r7, #4]
 80008d8:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80008da:	4b09      	ldr	r3, [pc, #36]	@ (8000900 <HAL_MspInit+0x44>)
 80008dc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80008de:	4a08      	ldr	r2, [pc, #32]	@ (8000900 <HAL_MspInit+0x44>)
 80008e0:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80008e4:	6593      	str	r3, [r2, #88]	@ 0x58
 80008e6:	4b06      	ldr	r3, [pc, #24]	@ (8000900 <HAL_MspInit+0x44>)
 80008e8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80008ea:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80008ee:	603b      	str	r3, [r7, #0]
 80008f0:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80008f2:	bf00      	nop
 80008f4:	370c      	adds	r7, #12
 80008f6:	46bd      	mov	sp, r7
 80008f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80008fc:	4770      	bx	lr
 80008fe:	bf00      	nop
 8000900:	40021000 	.word	0x40021000

08000904 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000904:	b480      	push	{r7}
 8000906:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8000908:	bf00      	nop
 800090a:	e7fd      	b.n	8000908 <NMI_Handler+0x4>

0800090c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800090c:	b480      	push	{r7}
 800090e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000910:	bf00      	nop
 8000912:	e7fd      	b.n	8000910 <HardFault_Handler+0x4>

08000914 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000914:	b480      	push	{r7}
 8000916:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000918:	bf00      	nop
 800091a:	e7fd      	b.n	8000918 <MemManage_Handler+0x4>

0800091c <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800091c:	b480      	push	{r7}
 800091e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000920:	bf00      	nop
 8000922:	e7fd      	b.n	8000920 <BusFault_Handler+0x4>

08000924 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000924:	b480      	push	{r7}
 8000926:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000928:	bf00      	nop
 800092a:	e7fd      	b.n	8000928 <UsageFault_Handler+0x4>

0800092c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800092c:	b480      	push	{r7}
 800092e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000930:	bf00      	nop
 8000932:	46bd      	mov	sp, r7
 8000934:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000938:	4770      	bx	lr

0800093a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800093a:	b480      	push	{r7}
 800093c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800093e:	bf00      	nop
 8000940:	46bd      	mov	sp, r7
 8000942:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000946:	4770      	bx	lr

08000948 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000948:	b480      	push	{r7}
 800094a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800094c:	bf00      	nop
 800094e:	46bd      	mov	sp, r7
 8000950:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000954:	4770      	bx	lr

08000956 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000956:	b580      	push	{r7, lr}
 8000958:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800095a:	f000 f893 	bl	8000a84 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800095e:	bf00      	nop
 8000960:	bd80      	pop	{r7, pc}
	...

08000964 <SystemInit>:
 8000964:	b480      	push	{r7}
 8000966:	af00      	add	r7, sp, #0
 8000968:	4b06      	ldr	r3, [pc, #24]	@ (8000984 <SystemInit+0x20>)
 800096a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800096e:	4a05      	ldr	r2, [pc, #20]	@ (8000984 <SystemInit+0x20>)
 8000970:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000974:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000978:	bf00      	nop
 800097a:	46bd      	mov	sp, r7
 800097c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000980:	4770      	bx	lr
 8000982:	bf00      	nop
 8000984:	e000ed00 	.word	0xe000ed00

08000988 <Reset_Handler>:
 8000988:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80009c0 <LoopForever+0x2>
 800098c:	f7ff ffea 	bl	8000964 <SystemInit>
 8000990:	480c      	ldr	r0, [pc, #48]	@ (80009c4 <LoopForever+0x6>)
 8000992:	490d      	ldr	r1, [pc, #52]	@ (80009c8 <LoopForever+0xa>)
 8000994:	4a0d      	ldr	r2, [pc, #52]	@ (80009cc <LoopForever+0xe>)
 8000996:	2300      	movs	r3, #0
 8000998:	e002      	b.n	80009a0 <LoopCopyDataInit>

0800099a <CopyDataInit>:
 800099a:	58d4      	ldr	r4, [r2, r3]
 800099c:	50c4      	str	r4, [r0, r3]
 800099e:	3304      	adds	r3, #4

080009a0 <LoopCopyDataInit>:
 80009a0:	18c4      	adds	r4, r0, r3
 80009a2:	428c      	cmp	r4, r1
 80009a4:	d3f9      	bcc.n	800099a <CopyDataInit>
 80009a6:	4a0a      	ldr	r2, [pc, #40]	@ (80009d0 <LoopForever+0x12>)
 80009a8:	4c0a      	ldr	r4, [pc, #40]	@ (80009d4 <LoopForever+0x16>)
 80009aa:	2300      	movs	r3, #0
 80009ac:	e001      	b.n	80009b2 <LoopFillZerobss>

080009ae <FillZerobss>:
 80009ae:	6013      	str	r3, [r2, #0]
 80009b0:	3204      	adds	r2, #4

080009b2 <LoopFillZerobss>:
 80009b2:	42a2      	cmp	r2, r4
 80009b4:	d3fb      	bcc.n	80009ae <FillZerobss>
 80009b6:	f000 ffdd 	bl	8001974 <__libc_init_array>
 80009ba:	f7ff fe3b 	bl	8000634 <main>

080009be <LoopForever>:
 80009be:	e7fe      	b.n	80009be <LoopForever>
 80009c0:	20050000 	.word	0x20050000
 80009c4:	20000000 	.word	0x20000000
 80009c8:	2000000c 	.word	0x2000000c
 80009cc:	08001a1c 	.word	0x08001a1c
 80009d0:	2000000c 	.word	0x2000000c
 80009d4:	20000030 	.word	0x20000030

080009d8 <ADC1_2_IRQHandler>:
 80009d8:	e7fe      	b.n	80009d8 <ADC1_2_IRQHandler>

080009da <HAL_Init>:
 80009da:	b580      	push	{r7, lr}
 80009dc:	b082      	sub	sp, #8
 80009de:	af00      	add	r7, sp, #0
 80009e0:	2300      	movs	r3, #0
 80009e2:	71fb      	strb	r3, [r7, #7]
 80009e4:	2003      	movs	r0, #3
 80009e6:	f000 f91f 	bl	8000c28 <HAL_NVIC_SetPriorityGrouping>
 80009ea:	2000      	movs	r0, #0
 80009ec:	f000 f80e 	bl	8000a0c <HAL_InitTick>
 80009f0:	4603      	mov	r3, r0
 80009f2:	2b00      	cmp	r3, #0
 80009f4:	d002      	beq.n	80009fc <HAL_Init+0x22>
 80009f6:	2301      	movs	r3, #1
 80009f8:	71fb      	strb	r3, [r7, #7]
 80009fa:	e001      	b.n	8000a00 <HAL_Init+0x26>
 80009fc:	f7ff ff5e 	bl	80008bc <HAL_MspInit>
 8000a00:	79fb      	ldrb	r3, [r7, #7]
 8000a02:	4618      	mov	r0, r3
 8000a04:	3708      	adds	r7, #8
 8000a06:	46bd      	mov	sp, r7
 8000a08:	bd80      	pop	{r7, pc}
	...

08000a0c <HAL_InitTick>:
 8000a0c:	b580      	push	{r7, lr}
 8000a0e:	b084      	sub	sp, #16
 8000a10:	af00      	add	r7, sp, #0
 8000a12:	6078      	str	r0, [r7, #4]
 8000a14:	2300      	movs	r3, #0
 8000a16:	73fb      	strb	r3, [r7, #15]
 8000a18:	4b17      	ldr	r3, [pc, #92]	@ (8000a78 <HAL_InitTick+0x6c>)
 8000a1a:	781b      	ldrb	r3, [r3, #0]
 8000a1c:	2b00      	cmp	r3, #0
 8000a1e:	d023      	beq.n	8000a68 <HAL_InitTick+0x5c>
 8000a20:	4b16      	ldr	r3, [pc, #88]	@ (8000a7c <HAL_InitTick+0x70>)
 8000a22:	681a      	ldr	r2, [r3, #0]
 8000a24:	4b14      	ldr	r3, [pc, #80]	@ (8000a78 <HAL_InitTick+0x6c>)
 8000a26:	781b      	ldrb	r3, [r3, #0]
 8000a28:	4619      	mov	r1, r3
 8000a2a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000a2e:	fbb3 f3f1 	udiv	r3, r3, r1
 8000a32:	fbb2 f3f3 	udiv	r3, r2, r3
 8000a36:	4618      	mov	r0, r3
 8000a38:	f000 f91d 	bl	8000c76 <HAL_SYSTICK_Config>
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	d10f      	bne.n	8000a62 <HAL_InitTick+0x56>
 8000a42:	687b      	ldr	r3, [r7, #4]
 8000a44:	2b0f      	cmp	r3, #15
 8000a46:	d809      	bhi.n	8000a5c <HAL_InitTick+0x50>
 8000a48:	2200      	movs	r2, #0
 8000a4a:	6879      	ldr	r1, [r7, #4]
 8000a4c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000a50:	f000 f8f5 	bl	8000c3e <HAL_NVIC_SetPriority>
 8000a54:	4a0a      	ldr	r2, [pc, #40]	@ (8000a80 <HAL_InitTick+0x74>)
 8000a56:	687b      	ldr	r3, [r7, #4]
 8000a58:	6013      	str	r3, [r2, #0]
 8000a5a:	e007      	b.n	8000a6c <HAL_InitTick+0x60>
 8000a5c:	2301      	movs	r3, #1
 8000a5e:	73fb      	strb	r3, [r7, #15]
 8000a60:	e004      	b.n	8000a6c <HAL_InitTick+0x60>
 8000a62:	2301      	movs	r3, #1
 8000a64:	73fb      	strb	r3, [r7, #15]
 8000a66:	e001      	b.n	8000a6c <HAL_InitTick+0x60>
 8000a68:	2301      	movs	r3, #1
 8000a6a:	73fb      	strb	r3, [r7, #15]
 8000a6c:	7bfb      	ldrb	r3, [r7, #15]
 8000a6e:	4618      	mov	r0, r3
 8000a70:	3710      	adds	r7, #16
 8000a72:	46bd      	mov	sp, r7
 8000a74:	bd80      	pop	{r7, pc}
 8000a76:	bf00      	nop
 8000a78:	20000008 	.word	0x20000008
 8000a7c:	20000000 	.word	0x20000000
 8000a80:	20000004 	.word	0x20000004

08000a84 <HAL_IncTick>:
 8000a84:	b480      	push	{r7}
 8000a86:	af00      	add	r7, sp, #0
 8000a88:	4b06      	ldr	r3, [pc, #24]	@ (8000aa4 <HAL_IncTick+0x20>)
 8000a8a:	781b      	ldrb	r3, [r3, #0]
 8000a8c:	461a      	mov	r2, r3
 8000a8e:	4b06      	ldr	r3, [pc, #24]	@ (8000aa8 <HAL_IncTick+0x24>)
 8000a90:	681b      	ldr	r3, [r3, #0]
 8000a92:	4413      	add	r3, r2
 8000a94:	4a04      	ldr	r2, [pc, #16]	@ (8000aa8 <HAL_IncTick+0x24>)
 8000a96:	6013      	str	r3, [r2, #0]
 8000a98:	bf00      	nop
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa0:	4770      	bx	lr
 8000aa2:	bf00      	nop
 8000aa4:	20000008 	.word	0x20000008
 8000aa8:	2000002c 	.word	0x2000002c

08000aac <HAL_GetTick>:
 8000aac:	b480      	push	{r7}
 8000aae:	af00      	add	r7, sp, #0
 8000ab0:	4b03      	ldr	r3, [pc, #12]	@ (8000ac0 <HAL_GetTick+0x14>)
 8000ab2:	681b      	ldr	r3, [r3, #0]
 8000ab4:	4618      	mov	r0, r3
 8000ab6:	46bd      	mov	sp, r7
 8000ab8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000abc:	4770      	bx	lr
 8000abe:	bf00      	nop
 8000ac0:	2000002c 	.word	0x2000002c

08000ac4 <__NVIC_SetPriorityGrouping>:
 8000ac4:	b480      	push	{r7}
 8000ac6:	b085      	sub	sp, #20
 8000ac8:	af00      	add	r7, sp, #0
 8000aca:	6078      	str	r0, [r7, #4]
 8000acc:	687b      	ldr	r3, [r7, #4]
 8000ace:	f003 0307 	and.w	r3, r3, #7
 8000ad2:	60fb      	str	r3, [r7, #12]
 8000ad4:	4b0c      	ldr	r3, [pc, #48]	@ (8000b08 <__NVIC_SetPriorityGrouping+0x44>)
 8000ad6:	68db      	ldr	r3, [r3, #12]
 8000ad8:	60bb      	str	r3, [r7, #8]
 8000ada:	68ba      	ldr	r2, [r7, #8]
 8000adc:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000ae0:	4013      	ands	r3, r2
 8000ae2:	60bb      	str	r3, [r7, #8]
 8000ae4:	68fb      	ldr	r3, [r7, #12]
 8000ae6:	021a      	lsls	r2, r3, #8
 8000ae8:	68bb      	ldr	r3, [r7, #8]
 8000aea:	4313      	orrs	r3, r2
 8000aec:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000af0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000af4:	60bb      	str	r3, [r7, #8]
 8000af6:	4a04      	ldr	r2, [pc, #16]	@ (8000b08 <__NVIC_SetPriorityGrouping+0x44>)
 8000af8:	68bb      	ldr	r3, [r7, #8]
 8000afa:	60d3      	str	r3, [r2, #12]
 8000afc:	bf00      	nop
 8000afe:	3714      	adds	r7, #20
 8000b00:	46bd      	mov	sp, r7
 8000b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b06:	4770      	bx	lr
 8000b08:	e000ed00 	.word	0xe000ed00

08000b0c <__NVIC_GetPriorityGrouping>:
 8000b0c:	b480      	push	{r7}
 8000b0e:	af00      	add	r7, sp, #0
 8000b10:	4b04      	ldr	r3, [pc, #16]	@ (8000b24 <__NVIC_GetPriorityGrouping+0x18>)
 8000b12:	68db      	ldr	r3, [r3, #12]
 8000b14:	0a1b      	lsrs	r3, r3, #8
 8000b16:	f003 0307 	and.w	r3, r3, #7
 8000b1a:	4618      	mov	r0, r3
 8000b1c:	46bd      	mov	sp, r7
 8000b1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b22:	4770      	bx	lr
 8000b24:	e000ed00 	.word	0xe000ed00

08000b28 <__NVIC_SetPriority>:
 8000b28:	b480      	push	{r7}
 8000b2a:	b083      	sub	sp, #12
 8000b2c:	af00      	add	r7, sp, #0
 8000b2e:	4603      	mov	r3, r0
 8000b30:	6039      	str	r1, [r7, #0]
 8000b32:	71fb      	strb	r3, [r7, #7]
 8000b34:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	db0a      	blt.n	8000b52 <__NVIC_SetPriority+0x2a>
 8000b3c:	683b      	ldr	r3, [r7, #0]
 8000b3e:	b2da      	uxtb	r2, r3
 8000b40:	490c      	ldr	r1, [pc, #48]	@ (8000b74 <__NVIC_SetPriority+0x4c>)
 8000b42:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000b46:	0112      	lsls	r2, r2, #4
 8000b48:	b2d2      	uxtb	r2, r2
 8000b4a:	440b      	add	r3, r1
 8000b4c:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8000b50:	e00a      	b.n	8000b68 <__NVIC_SetPriority+0x40>
 8000b52:	683b      	ldr	r3, [r7, #0]
 8000b54:	b2da      	uxtb	r2, r3
 8000b56:	4908      	ldr	r1, [pc, #32]	@ (8000b78 <__NVIC_SetPriority+0x50>)
 8000b58:	79fb      	ldrb	r3, [r7, #7]
 8000b5a:	f003 030f 	and.w	r3, r3, #15
 8000b5e:	3b04      	subs	r3, #4
 8000b60:	0112      	lsls	r2, r2, #4
 8000b62:	b2d2      	uxtb	r2, r2
 8000b64:	440b      	add	r3, r1
 8000b66:	761a      	strb	r2, [r3, #24]
 8000b68:	bf00      	nop
 8000b6a:	370c      	adds	r7, #12
 8000b6c:	46bd      	mov	sp, r7
 8000b6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b72:	4770      	bx	lr
 8000b74:	e000e100 	.word	0xe000e100
 8000b78:	e000ed00 	.word	0xe000ed00

08000b7c <NVIC_EncodePriority>:
 8000b7c:	b480      	push	{r7}
 8000b7e:	b089      	sub	sp, #36	@ 0x24
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	60f8      	str	r0, [r7, #12]
 8000b84:	60b9      	str	r1, [r7, #8]
 8000b86:	607a      	str	r2, [r7, #4]
 8000b88:	68fb      	ldr	r3, [r7, #12]
 8000b8a:	f003 0307 	and.w	r3, r3, #7
 8000b8e:	61fb      	str	r3, [r7, #28]
 8000b90:	69fb      	ldr	r3, [r7, #28]
 8000b92:	f1c3 0307 	rsb	r3, r3, #7
 8000b96:	2b04      	cmp	r3, #4
 8000b98:	bf28      	it	cs
 8000b9a:	2304      	movcs	r3, #4
 8000b9c:	61bb      	str	r3, [r7, #24]
 8000b9e:	69fb      	ldr	r3, [r7, #28]
 8000ba0:	3304      	adds	r3, #4
 8000ba2:	2b06      	cmp	r3, #6
 8000ba4:	d902      	bls.n	8000bac <NVIC_EncodePriority+0x30>
 8000ba6:	69fb      	ldr	r3, [r7, #28]
 8000ba8:	3b03      	subs	r3, #3
 8000baa:	e000      	b.n	8000bae <NVIC_EncodePriority+0x32>
 8000bac:	2300      	movs	r3, #0
 8000bae:	617b      	str	r3, [r7, #20]
 8000bb0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8000bb4:	69bb      	ldr	r3, [r7, #24]
 8000bb6:	fa02 f303 	lsl.w	r3, r2, r3
 8000bba:	43da      	mvns	r2, r3
 8000bbc:	68bb      	ldr	r3, [r7, #8]
 8000bbe:	401a      	ands	r2, r3
 8000bc0:	697b      	ldr	r3, [r7, #20]
 8000bc2:	409a      	lsls	r2, r3
 8000bc4:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8000bc8:	697b      	ldr	r3, [r7, #20]
 8000bca:	fa01 f303 	lsl.w	r3, r1, r3
 8000bce:	43d9      	mvns	r1, r3
 8000bd0:	687b      	ldr	r3, [r7, #4]
 8000bd2:	400b      	ands	r3, r1
 8000bd4:	4313      	orrs	r3, r2
 8000bd6:	4618      	mov	r0, r3
 8000bd8:	3724      	adds	r7, #36	@ 0x24
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000be0:	4770      	bx	lr
	...

08000be4 <SysTick_Config>:
 8000be4:	b580      	push	{r7, lr}
 8000be6:	b082      	sub	sp, #8
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
 8000bec:	687b      	ldr	r3, [r7, #4]
 8000bee:	3b01      	subs	r3, #1
 8000bf0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000bf4:	d301      	bcc.n	8000bfa <SysTick_Config+0x16>
 8000bf6:	2301      	movs	r3, #1
 8000bf8:	e00f      	b.n	8000c1a <SysTick_Config+0x36>
 8000bfa:	4a0a      	ldr	r2, [pc, #40]	@ (8000c24 <SysTick_Config+0x40>)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	3b01      	subs	r3, #1
 8000c00:	6053      	str	r3, [r2, #4]
 8000c02:	210f      	movs	r1, #15
 8000c04:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8000c08:	f7ff ff8e 	bl	8000b28 <__NVIC_SetPriority>
 8000c0c:	4b05      	ldr	r3, [pc, #20]	@ (8000c24 <SysTick_Config+0x40>)
 8000c0e:	2200      	movs	r2, #0
 8000c10:	609a      	str	r2, [r3, #8]
 8000c12:	4b04      	ldr	r3, [pc, #16]	@ (8000c24 <SysTick_Config+0x40>)
 8000c14:	2207      	movs	r2, #7
 8000c16:	601a      	str	r2, [r3, #0]
 8000c18:	2300      	movs	r3, #0
 8000c1a:	4618      	mov	r0, r3
 8000c1c:	3708      	adds	r7, #8
 8000c1e:	46bd      	mov	sp, r7
 8000c20:	bd80      	pop	{r7, pc}
 8000c22:	bf00      	nop
 8000c24:	e000e010 	.word	0xe000e010

08000c28 <HAL_NVIC_SetPriorityGrouping>:
 8000c28:	b580      	push	{r7, lr}
 8000c2a:	b082      	sub	sp, #8
 8000c2c:	af00      	add	r7, sp, #0
 8000c2e:	6078      	str	r0, [r7, #4]
 8000c30:	6878      	ldr	r0, [r7, #4]
 8000c32:	f7ff ff47 	bl	8000ac4 <__NVIC_SetPriorityGrouping>
 8000c36:	bf00      	nop
 8000c38:	3708      	adds	r7, #8
 8000c3a:	46bd      	mov	sp, r7
 8000c3c:	bd80      	pop	{r7, pc}

08000c3e <HAL_NVIC_SetPriority>:
 8000c3e:	b580      	push	{r7, lr}
 8000c40:	b086      	sub	sp, #24
 8000c42:	af00      	add	r7, sp, #0
 8000c44:	4603      	mov	r3, r0
 8000c46:	60b9      	str	r1, [r7, #8]
 8000c48:	607a      	str	r2, [r7, #4]
 8000c4a:	73fb      	strb	r3, [r7, #15]
 8000c4c:	2300      	movs	r3, #0
 8000c4e:	617b      	str	r3, [r7, #20]
 8000c50:	f7ff ff5c 	bl	8000b0c <__NVIC_GetPriorityGrouping>
 8000c54:	6178      	str	r0, [r7, #20]
 8000c56:	687a      	ldr	r2, [r7, #4]
 8000c58:	68b9      	ldr	r1, [r7, #8]
 8000c5a:	6978      	ldr	r0, [r7, #20]
 8000c5c:	f7ff ff8e 	bl	8000b7c <NVIC_EncodePriority>
 8000c60:	4602      	mov	r2, r0
 8000c62:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000c66:	4611      	mov	r1, r2
 8000c68:	4618      	mov	r0, r3
 8000c6a:	f7ff ff5d 	bl	8000b28 <__NVIC_SetPriority>
 8000c6e:	bf00      	nop
 8000c70:	3718      	adds	r7, #24
 8000c72:	46bd      	mov	sp, r7
 8000c74:	bd80      	pop	{r7, pc}

08000c76 <HAL_SYSTICK_Config>:
 8000c76:	b580      	push	{r7, lr}
 8000c78:	b082      	sub	sp, #8
 8000c7a:	af00      	add	r7, sp, #0
 8000c7c:	6078      	str	r0, [r7, #4]
 8000c7e:	6878      	ldr	r0, [r7, #4]
 8000c80:	f7ff ffb0 	bl	8000be4 <SysTick_Config>
 8000c84:	4603      	mov	r3, r0
 8000c86:	4618      	mov	r0, r3
 8000c88:	3708      	adds	r7, #8
 8000c8a:	46bd      	mov	sp, r7
 8000c8c:	bd80      	pop	{r7, pc}
	...

08000c90 <HAL_PWREx_GetVoltageRange>:
 8000c90:	b480      	push	{r7}
 8000c92:	af00      	add	r7, sp, #0
 8000c94:	4b04      	ldr	r3, [pc, #16]	@ (8000ca8 <HAL_PWREx_GetVoltageRange+0x18>)
 8000c96:	681b      	ldr	r3, [r3, #0]
 8000c98:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8000c9c:	4618      	mov	r0, r3
 8000c9e:	46bd      	mov	sp, r7
 8000ca0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ca4:	4770      	bx	lr
 8000ca6:	bf00      	nop
 8000ca8:	40007000 	.word	0x40007000

08000cac <HAL_PWREx_ControlVoltageScaling>:
 8000cac:	b480      	push	{r7}
 8000cae:	b085      	sub	sp, #20
 8000cb0:	af00      	add	r7, sp, #0
 8000cb2:	6078      	str	r0, [r7, #4]
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000cba:	d130      	bne.n	8000d1e <HAL_PWREx_ControlVoltageScaling+0x72>
 8000cbc:	4b23      	ldr	r3, [pc, #140]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000cbe:	681b      	ldr	r3, [r3, #0]
 8000cc0:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8000cc4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000cc8:	d038      	beq.n	8000d3c <HAL_PWREx_ControlVoltageScaling+0x90>
 8000cca:	4b20      	ldr	r3, [pc, #128]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8000cd2:	4a1e      	ldr	r2, [pc, #120]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000cd4:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000cd8:	6013      	str	r3, [r2, #0]
 8000cda:	4b1d      	ldr	r3, [pc, #116]	@ (8000d50 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8000cdc:	681b      	ldr	r3, [r3, #0]
 8000cde:	2232      	movs	r2, #50	@ 0x32
 8000ce0:	fb02 f303 	mul.w	r3, r2, r3
 8000ce4:	4a1b      	ldr	r2, [pc, #108]	@ (8000d54 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8000ce6:	fba2 2303 	umull	r2, r3, r2, r3
 8000cea:	0c9b      	lsrs	r3, r3, #18
 8000cec:	3301      	adds	r3, #1
 8000cee:	60fb      	str	r3, [r7, #12]
 8000cf0:	e002      	b.n	8000cf8 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8000cf2:	68fb      	ldr	r3, [r7, #12]
 8000cf4:	3b01      	subs	r3, #1
 8000cf6:	60fb      	str	r3, [r7, #12]
 8000cf8:	4b14      	ldr	r3, [pc, #80]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000cfa:	695b      	ldr	r3, [r3, #20]
 8000cfc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000d00:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000d04:	d102      	bne.n	8000d0c <HAL_PWREx_ControlVoltageScaling+0x60>
 8000d06:	68fb      	ldr	r3, [r7, #12]
 8000d08:	2b00      	cmp	r3, #0
 8000d0a:	d1f2      	bne.n	8000cf2 <HAL_PWREx_ControlVoltageScaling+0x46>
 8000d0c:	4b0f      	ldr	r3, [pc, #60]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000d0e:	695b      	ldr	r3, [r3, #20]
 8000d10:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8000d14:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000d18:	d110      	bne.n	8000d3c <HAL_PWREx_ControlVoltageScaling+0x90>
 8000d1a:	2303      	movs	r3, #3
 8000d1c:	e00f      	b.n	8000d3e <HAL_PWREx_ControlVoltageScaling+0x92>
 8000d1e:	4b0b      	ldr	r3, [pc, #44]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000d20:	681b      	ldr	r3, [r3, #0]
 8000d22:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8000d26:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8000d2a:	d007      	beq.n	8000d3c <HAL_PWREx_ControlVoltageScaling+0x90>
 8000d2c:	4b07      	ldr	r3, [pc, #28]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000d2e:	681b      	ldr	r3, [r3, #0]
 8000d30:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8000d34:	4a05      	ldr	r2, [pc, #20]	@ (8000d4c <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8000d36:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000d3a:	6013      	str	r3, [r2, #0]
 8000d3c:	2300      	movs	r3, #0
 8000d3e:	4618      	mov	r0, r3
 8000d40:	3714      	adds	r7, #20
 8000d42:	46bd      	mov	sp, r7
 8000d44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d48:	4770      	bx	lr
 8000d4a:	bf00      	nop
 8000d4c:	40007000 	.word	0x40007000
 8000d50:	20000000 	.word	0x20000000
 8000d54:	431bde83 	.word	0x431bde83

08000d58 <HAL_RCC_OscConfig>:
 8000d58:	b580      	push	{r7, lr}
 8000d5a:	b088      	sub	sp, #32
 8000d5c:	af00      	add	r7, sp, #0
 8000d5e:	6078      	str	r0, [r7, #4]
 8000d60:	687b      	ldr	r3, [r7, #4]
 8000d62:	2b00      	cmp	r3, #0
 8000d64:	d102      	bne.n	8000d6c <HAL_RCC_OscConfig+0x14>
 8000d66:	2301      	movs	r3, #1
 8000d68:	f000 bc08 	b.w	800157c <HAL_RCC_OscConfig+0x824>
 8000d6c:	4b96      	ldr	r3, [pc, #600]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000d6e:	689b      	ldr	r3, [r3, #8]
 8000d70:	f003 030c 	and.w	r3, r3, #12
 8000d74:	61bb      	str	r3, [r7, #24]
 8000d76:	4b94      	ldr	r3, [pc, #592]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000d78:	68db      	ldr	r3, [r3, #12]
 8000d7a:	f003 0303 	and.w	r3, r3, #3
 8000d7e:	617b      	str	r3, [r7, #20]
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	f003 0310 	and.w	r3, r3, #16
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	f000 80e4 	beq.w	8000f56 <HAL_RCC_OscConfig+0x1fe>
 8000d8e:	69bb      	ldr	r3, [r7, #24]
 8000d90:	2b00      	cmp	r3, #0
 8000d92:	d007      	beq.n	8000da4 <HAL_RCC_OscConfig+0x4c>
 8000d94:	69bb      	ldr	r3, [r7, #24]
 8000d96:	2b0c      	cmp	r3, #12
 8000d98:	f040 808b 	bne.w	8000eb2 <HAL_RCC_OscConfig+0x15a>
 8000d9c:	697b      	ldr	r3, [r7, #20]
 8000d9e:	2b01      	cmp	r3, #1
 8000da0:	f040 8087 	bne.w	8000eb2 <HAL_RCC_OscConfig+0x15a>
 8000da4:	4b88      	ldr	r3, [pc, #544]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	f003 0302 	and.w	r3, r3, #2
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	d005      	beq.n	8000dbc <HAL_RCC_OscConfig+0x64>
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	699b      	ldr	r3, [r3, #24]
 8000db4:	2b00      	cmp	r3, #0
 8000db6:	d101      	bne.n	8000dbc <HAL_RCC_OscConfig+0x64>
 8000db8:	2301      	movs	r3, #1
 8000dba:	e3df      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	6a1a      	ldr	r2, [r3, #32]
 8000dc0:	4b81      	ldr	r3, [pc, #516]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000dc2:	681b      	ldr	r3, [r3, #0]
 8000dc4:	f003 0308 	and.w	r3, r3, #8
 8000dc8:	2b00      	cmp	r3, #0
 8000dca:	d004      	beq.n	8000dd6 <HAL_RCC_OscConfig+0x7e>
 8000dcc:	4b7e      	ldr	r3, [pc, #504]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8000dd4:	e005      	b.n	8000de2 <HAL_RCC_OscConfig+0x8a>
 8000dd6:	4b7c      	ldr	r3, [pc, #496]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000dd8:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8000ddc:	091b      	lsrs	r3, r3, #4
 8000dde:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8000de2:	4293      	cmp	r3, r2
 8000de4:	d223      	bcs.n	8000e2e <HAL_RCC_OscConfig+0xd6>
 8000de6:	687b      	ldr	r3, [r7, #4]
 8000de8:	6a1b      	ldr	r3, [r3, #32]
 8000dea:	4618      	mov	r0, r3
 8000dec:	f000 fd5a 	bl	80018a4 <RCC_SetFlashLatencyFromMSIRange>
 8000df0:	4603      	mov	r3, r0
 8000df2:	2b00      	cmp	r3, #0
 8000df4:	d001      	beq.n	8000dfa <HAL_RCC_OscConfig+0xa2>
 8000df6:	2301      	movs	r3, #1
 8000df8:	e3c0      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000dfa:	4b73      	ldr	r3, [pc, #460]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000dfc:	681b      	ldr	r3, [r3, #0]
 8000dfe:	4a72      	ldr	r2, [pc, #456]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e00:	f043 0308 	orr.w	r3, r3, #8
 8000e04:	6013      	str	r3, [r2, #0]
 8000e06:	4b70      	ldr	r3, [pc, #448]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e08:	681b      	ldr	r3, [r3, #0]
 8000e0a:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8000e0e:	687b      	ldr	r3, [r7, #4]
 8000e10:	6a1b      	ldr	r3, [r3, #32]
 8000e12:	496d      	ldr	r1, [pc, #436]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e14:	4313      	orrs	r3, r2
 8000e16:	600b      	str	r3, [r1, #0]
 8000e18:	4b6b      	ldr	r3, [pc, #428]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e1a:	685b      	ldr	r3, [r3, #4]
 8000e1c:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8000e20:	687b      	ldr	r3, [r7, #4]
 8000e22:	69db      	ldr	r3, [r3, #28]
 8000e24:	021b      	lsls	r3, r3, #8
 8000e26:	4968      	ldr	r1, [pc, #416]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e28:	4313      	orrs	r3, r2
 8000e2a:	604b      	str	r3, [r1, #4]
 8000e2c:	e025      	b.n	8000e7a <HAL_RCC_OscConfig+0x122>
 8000e2e:	4b66      	ldr	r3, [pc, #408]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e30:	681b      	ldr	r3, [r3, #0]
 8000e32:	4a65      	ldr	r2, [pc, #404]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e34:	f043 0308 	orr.w	r3, r3, #8
 8000e38:	6013      	str	r3, [r2, #0]
 8000e3a:	4b63      	ldr	r3, [pc, #396]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e3c:	681b      	ldr	r3, [r3, #0]
 8000e3e:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8000e42:	687b      	ldr	r3, [r7, #4]
 8000e44:	6a1b      	ldr	r3, [r3, #32]
 8000e46:	4960      	ldr	r1, [pc, #384]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e48:	4313      	orrs	r3, r2
 8000e4a:	600b      	str	r3, [r1, #0]
 8000e4c:	4b5e      	ldr	r3, [pc, #376]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e4e:	685b      	ldr	r3, [r3, #4]
 8000e50:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	69db      	ldr	r3, [r3, #28]
 8000e58:	021b      	lsls	r3, r3, #8
 8000e5a:	495b      	ldr	r1, [pc, #364]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e5c:	4313      	orrs	r3, r2
 8000e5e:	604b      	str	r3, [r1, #4]
 8000e60:	69bb      	ldr	r3, [r7, #24]
 8000e62:	2b00      	cmp	r3, #0
 8000e64:	d109      	bne.n	8000e7a <HAL_RCC_OscConfig+0x122>
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	6a1b      	ldr	r3, [r3, #32]
 8000e6a:	4618      	mov	r0, r3
 8000e6c:	f000 fd1a 	bl	80018a4 <RCC_SetFlashLatencyFromMSIRange>
 8000e70:	4603      	mov	r3, r0
 8000e72:	2b00      	cmp	r3, #0
 8000e74:	d001      	beq.n	8000e7a <HAL_RCC_OscConfig+0x122>
 8000e76:	2301      	movs	r3, #1
 8000e78:	e380      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000e7a:	f000 fc87 	bl	800178c <HAL_RCC_GetSysClockFreq>
 8000e7e:	4602      	mov	r2, r0
 8000e80:	4b51      	ldr	r3, [pc, #324]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000e82:	689b      	ldr	r3, [r3, #8]
 8000e84:	091b      	lsrs	r3, r3, #4
 8000e86:	f003 030f 	and.w	r3, r3, #15
 8000e8a:	4950      	ldr	r1, [pc, #320]	@ (8000fcc <HAL_RCC_OscConfig+0x274>)
 8000e8c:	5ccb      	ldrb	r3, [r1, r3]
 8000e8e:	f003 031f 	and.w	r3, r3, #31
 8000e92:	fa22 f303 	lsr.w	r3, r2, r3
 8000e96:	4a4e      	ldr	r2, [pc, #312]	@ (8000fd0 <HAL_RCC_OscConfig+0x278>)
 8000e98:	6013      	str	r3, [r2, #0]
 8000e9a:	4b4e      	ldr	r3, [pc, #312]	@ (8000fd4 <HAL_RCC_OscConfig+0x27c>)
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	4618      	mov	r0, r3
 8000ea0:	f7ff fdb4 	bl	8000a0c <HAL_InitTick>
 8000ea4:	4603      	mov	r3, r0
 8000ea6:	73fb      	strb	r3, [r7, #15]
 8000ea8:	7bfb      	ldrb	r3, [r7, #15]
 8000eaa:	2b00      	cmp	r3, #0
 8000eac:	d052      	beq.n	8000f54 <HAL_RCC_OscConfig+0x1fc>
 8000eae:	7bfb      	ldrb	r3, [r7, #15]
 8000eb0:	e364      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	699b      	ldr	r3, [r3, #24]
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d032      	beq.n	8000f20 <HAL_RCC_OscConfig+0x1c8>
 8000eba:	4b43      	ldr	r3, [pc, #268]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	4a42      	ldr	r2, [pc, #264]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000ec0:	f043 0301 	orr.w	r3, r3, #1
 8000ec4:	6013      	str	r3, [r2, #0]
 8000ec6:	f7ff fdf1 	bl	8000aac <HAL_GetTick>
 8000eca:	6138      	str	r0, [r7, #16]
 8000ecc:	e008      	b.n	8000ee0 <HAL_RCC_OscConfig+0x188>
 8000ece:	f7ff fded 	bl	8000aac <HAL_GetTick>
 8000ed2:	4602      	mov	r2, r0
 8000ed4:	693b      	ldr	r3, [r7, #16]
 8000ed6:	1ad3      	subs	r3, r2, r3
 8000ed8:	2b02      	cmp	r3, #2
 8000eda:	d901      	bls.n	8000ee0 <HAL_RCC_OscConfig+0x188>
 8000edc:	2303      	movs	r3, #3
 8000ede:	e34d      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000ee0:	4b39      	ldr	r3, [pc, #228]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000ee2:	681b      	ldr	r3, [r3, #0]
 8000ee4:	f003 0302 	and.w	r3, r3, #2
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	d0f0      	beq.n	8000ece <HAL_RCC_OscConfig+0x176>
 8000eec:	4b36      	ldr	r3, [pc, #216]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4a35      	ldr	r2, [pc, #212]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000ef2:	f043 0308 	orr.w	r3, r3, #8
 8000ef6:	6013      	str	r3, [r2, #0]
 8000ef8:	4b33      	ldr	r3, [pc, #204]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	6a1b      	ldr	r3, [r3, #32]
 8000f04:	4930      	ldr	r1, [pc, #192]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f06:	4313      	orrs	r3, r2
 8000f08:	600b      	str	r3, [r1, #0]
 8000f0a:	4b2f      	ldr	r3, [pc, #188]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f0c:	685b      	ldr	r3, [r3, #4]
 8000f0e:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8000f12:	687b      	ldr	r3, [r7, #4]
 8000f14:	69db      	ldr	r3, [r3, #28]
 8000f16:	021b      	lsls	r3, r3, #8
 8000f18:	492b      	ldr	r1, [pc, #172]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f1a:	4313      	orrs	r3, r2
 8000f1c:	604b      	str	r3, [r1, #4]
 8000f1e:	e01a      	b.n	8000f56 <HAL_RCC_OscConfig+0x1fe>
 8000f20:	4b29      	ldr	r3, [pc, #164]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	4a28      	ldr	r2, [pc, #160]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f26:	f023 0301 	bic.w	r3, r3, #1
 8000f2a:	6013      	str	r3, [r2, #0]
 8000f2c:	f7ff fdbe 	bl	8000aac <HAL_GetTick>
 8000f30:	6138      	str	r0, [r7, #16]
 8000f32:	e008      	b.n	8000f46 <HAL_RCC_OscConfig+0x1ee>
 8000f34:	f7ff fdba 	bl	8000aac <HAL_GetTick>
 8000f38:	4602      	mov	r2, r0
 8000f3a:	693b      	ldr	r3, [r7, #16]
 8000f3c:	1ad3      	subs	r3, r2, r3
 8000f3e:	2b02      	cmp	r3, #2
 8000f40:	d901      	bls.n	8000f46 <HAL_RCC_OscConfig+0x1ee>
 8000f42:	2303      	movs	r3, #3
 8000f44:	e31a      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000f46:	4b20      	ldr	r3, [pc, #128]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	f003 0302 	and.w	r3, r3, #2
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d1f0      	bne.n	8000f34 <HAL_RCC_OscConfig+0x1dc>
 8000f52:	e000      	b.n	8000f56 <HAL_RCC_OscConfig+0x1fe>
 8000f54:	bf00      	nop
 8000f56:	687b      	ldr	r3, [r7, #4]
 8000f58:	681b      	ldr	r3, [r3, #0]
 8000f5a:	f003 0301 	and.w	r3, r3, #1
 8000f5e:	2b00      	cmp	r3, #0
 8000f60:	d073      	beq.n	800104a <HAL_RCC_OscConfig+0x2f2>
 8000f62:	69bb      	ldr	r3, [r7, #24]
 8000f64:	2b08      	cmp	r3, #8
 8000f66:	d005      	beq.n	8000f74 <HAL_RCC_OscConfig+0x21c>
 8000f68:	69bb      	ldr	r3, [r7, #24]
 8000f6a:	2b0c      	cmp	r3, #12
 8000f6c:	d10e      	bne.n	8000f8c <HAL_RCC_OscConfig+0x234>
 8000f6e:	697b      	ldr	r3, [r7, #20]
 8000f70:	2b03      	cmp	r3, #3
 8000f72:	d10b      	bne.n	8000f8c <HAL_RCC_OscConfig+0x234>
 8000f74:	4b14      	ldr	r3, [pc, #80]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000f7c:	2b00      	cmp	r3, #0
 8000f7e:	d063      	beq.n	8001048 <HAL_RCC_OscConfig+0x2f0>
 8000f80:	687b      	ldr	r3, [r7, #4]
 8000f82:	685b      	ldr	r3, [r3, #4]
 8000f84:	2b00      	cmp	r3, #0
 8000f86:	d15f      	bne.n	8001048 <HAL_RCC_OscConfig+0x2f0>
 8000f88:	2301      	movs	r3, #1
 8000f8a:	e2f7      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	685b      	ldr	r3, [r3, #4]
 8000f90:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8000f94:	d106      	bne.n	8000fa4 <HAL_RCC_OscConfig+0x24c>
 8000f96:	4b0c      	ldr	r3, [pc, #48]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f98:	681b      	ldr	r3, [r3, #0]
 8000f9a:	4a0b      	ldr	r2, [pc, #44]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000f9c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000fa0:	6013      	str	r3, [r2, #0]
 8000fa2:	e025      	b.n	8000ff0 <HAL_RCC_OscConfig+0x298>
 8000fa4:	687b      	ldr	r3, [r7, #4]
 8000fa6:	685b      	ldr	r3, [r3, #4]
 8000fa8:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8000fac:	d114      	bne.n	8000fd8 <HAL_RCC_OscConfig+0x280>
 8000fae:	4b06      	ldr	r3, [pc, #24]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	4a05      	ldr	r2, [pc, #20]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000fb4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8000fb8:	6013      	str	r3, [r2, #0]
 8000fba:	4b03      	ldr	r3, [pc, #12]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000fbc:	681b      	ldr	r3, [r3, #0]
 8000fbe:	4a02      	ldr	r2, [pc, #8]	@ (8000fc8 <HAL_RCC_OscConfig+0x270>)
 8000fc0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000fc4:	6013      	str	r3, [r2, #0]
 8000fc6:	e013      	b.n	8000ff0 <HAL_RCC_OscConfig+0x298>
 8000fc8:	40021000 	.word	0x40021000
 8000fcc:	080019d4 	.word	0x080019d4
 8000fd0:	20000000 	.word	0x20000000
 8000fd4:	20000004 	.word	0x20000004
 8000fd8:	4ba0      	ldr	r3, [pc, #640]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	4a9f      	ldr	r2, [pc, #636]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8000fde:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000fe2:	6013      	str	r3, [r2, #0]
 8000fe4:	4b9d      	ldr	r3, [pc, #628]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8000fe6:	681b      	ldr	r3, [r3, #0]
 8000fe8:	4a9c      	ldr	r2, [pc, #624]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8000fea:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000fee:	6013      	str	r3, [r2, #0]
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	685b      	ldr	r3, [r3, #4]
 8000ff4:	2b00      	cmp	r3, #0
 8000ff6:	d013      	beq.n	8001020 <HAL_RCC_OscConfig+0x2c8>
 8000ff8:	f7ff fd58 	bl	8000aac <HAL_GetTick>
 8000ffc:	6138      	str	r0, [r7, #16]
 8000ffe:	e008      	b.n	8001012 <HAL_RCC_OscConfig+0x2ba>
 8001000:	f7ff fd54 	bl	8000aac <HAL_GetTick>
 8001004:	4602      	mov	r2, r0
 8001006:	693b      	ldr	r3, [r7, #16]
 8001008:	1ad3      	subs	r3, r2, r3
 800100a:	2b64      	cmp	r3, #100	@ 0x64
 800100c:	d901      	bls.n	8001012 <HAL_RCC_OscConfig+0x2ba>
 800100e:	2303      	movs	r3, #3
 8001010:	e2b4      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001012:	4b92      	ldr	r3, [pc, #584]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800101a:	2b00      	cmp	r3, #0
 800101c:	d0f0      	beq.n	8001000 <HAL_RCC_OscConfig+0x2a8>
 800101e:	e014      	b.n	800104a <HAL_RCC_OscConfig+0x2f2>
 8001020:	f7ff fd44 	bl	8000aac <HAL_GetTick>
 8001024:	6138      	str	r0, [r7, #16]
 8001026:	e008      	b.n	800103a <HAL_RCC_OscConfig+0x2e2>
 8001028:	f7ff fd40 	bl	8000aac <HAL_GetTick>
 800102c:	4602      	mov	r2, r0
 800102e:	693b      	ldr	r3, [r7, #16]
 8001030:	1ad3      	subs	r3, r2, r3
 8001032:	2b64      	cmp	r3, #100	@ 0x64
 8001034:	d901      	bls.n	800103a <HAL_RCC_OscConfig+0x2e2>
 8001036:	2303      	movs	r3, #3
 8001038:	e2a0      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 800103a:	4b88      	ldr	r3, [pc, #544]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001042:	2b00      	cmp	r3, #0
 8001044:	d1f0      	bne.n	8001028 <HAL_RCC_OscConfig+0x2d0>
 8001046:	e000      	b.n	800104a <HAL_RCC_OscConfig+0x2f2>
 8001048:	bf00      	nop
 800104a:	687b      	ldr	r3, [r7, #4]
 800104c:	681b      	ldr	r3, [r3, #0]
 800104e:	f003 0302 	and.w	r3, r3, #2
 8001052:	2b00      	cmp	r3, #0
 8001054:	d060      	beq.n	8001118 <HAL_RCC_OscConfig+0x3c0>
 8001056:	69bb      	ldr	r3, [r7, #24]
 8001058:	2b04      	cmp	r3, #4
 800105a:	d005      	beq.n	8001068 <HAL_RCC_OscConfig+0x310>
 800105c:	69bb      	ldr	r3, [r7, #24]
 800105e:	2b0c      	cmp	r3, #12
 8001060:	d119      	bne.n	8001096 <HAL_RCC_OscConfig+0x33e>
 8001062:	697b      	ldr	r3, [r7, #20]
 8001064:	2b02      	cmp	r3, #2
 8001066:	d116      	bne.n	8001096 <HAL_RCC_OscConfig+0x33e>
 8001068:	4b7c      	ldr	r3, [pc, #496]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800106a:	681b      	ldr	r3, [r3, #0]
 800106c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001070:	2b00      	cmp	r3, #0
 8001072:	d005      	beq.n	8001080 <HAL_RCC_OscConfig+0x328>
 8001074:	687b      	ldr	r3, [r7, #4]
 8001076:	68db      	ldr	r3, [r3, #12]
 8001078:	2b00      	cmp	r3, #0
 800107a:	d101      	bne.n	8001080 <HAL_RCC_OscConfig+0x328>
 800107c:	2301      	movs	r3, #1
 800107e:	e27d      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001080:	4b76      	ldr	r3, [pc, #472]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001082:	685b      	ldr	r3, [r3, #4]
 8001084:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8001088:	687b      	ldr	r3, [r7, #4]
 800108a:	691b      	ldr	r3, [r3, #16]
 800108c:	061b      	lsls	r3, r3, #24
 800108e:	4973      	ldr	r1, [pc, #460]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001090:	4313      	orrs	r3, r2
 8001092:	604b      	str	r3, [r1, #4]
 8001094:	e040      	b.n	8001118 <HAL_RCC_OscConfig+0x3c0>
 8001096:	687b      	ldr	r3, [r7, #4]
 8001098:	68db      	ldr	r3, [r3, #12]
 800109a:	2b00      	cmp	r3, #0
 800109c:	d023      	beq.n	80010e6 <HAL_RCC_OscConfig+0x38e>
 800109e:	4b6f      	ldr	r3, [pc, #444]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010a0:	681b      	ldr	r3, [r3, #0]
 80010a2:	4a6e      	ldr	r2, [pc, #440]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010a4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80010a8:	6013      	str	r3, [r2, #0]
 80010aa:	f7ff fcff 	bl	8000aac <HAL_GetTick>
 80010ae:	6138      	str	r0, [r7, #16]
 80010b0:	e008      	b.n	80010c4 <HAL_RCC_OscConfig+0x36c>
 80010b2:	f7ff fcfb 	bl	8000aac <HAL_GetTick>
 80010b6:	4602      	mov	r2, r0
 80010b8:	693b      	ldr	r3, [r7, #16]
 80010ba:	1ad3      	subs	r3, r2, r3
 80010bc:	2b02      	cmp	r3, #2
 80010be:	d901      	bls.n	80010c4 <HAL_RCC_OscConfig+0x36c>
 80010c0:	2303      	movs	r3, #3
 80010c2:	e25b      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 80010c4:	4b65      	ldr	r3, [pc, #404]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d0f0      	beq.n	80010b2 <HAL_RCC_OscConfig+0x35a>
 80010d0:	4b62      	ldr	r3, [pc, #392]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010d2:	685b      	ldr	r3, [r3, #4]
 80010d4:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	691b      	ldr	r3, [r3, #16]
 80010dc:	061b      	lsls	r3, r3, #24
 80010de:	495f      	ldr	r1, [pc, #380]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010e0:	4313      	orrs	r3, r2
 80010e2:	604b      	str	r3, [r1, #4]
 80010e4:	e018      	b.n	8001118 <HAL_RCC_OscConfig+0x3c0>
 80010e6:	4b5d      	ldr	r3, [pc, #372]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010e8:	681b      	ldr	r3, [r3, #0]
 80010ea:	4a5c      	ldr	r2, [pc, #368]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80010ec:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80010f0:	6013      	str	r3, [r2, #0]
 80010f2:	f7ff fcdb 	bl	8000aac <HAL_GetTick>
 80010f6:	6138      	str	r0, [r7, #16]
 80010f8:	e008      	b.n	800110c <HAL_RCC_OscConfig+0x3b4>
 80010fa:	f7ff fcd7 	bl	8000aac <HAL_GetTick>
 80010fe:	4602      	mov	r2, r0
 8001100:	693b      	ldr	r3, [r7, #16]
 8001102:	1ad3      	subs	r3, r2, r3
 8001104:	2b02      	cmp	r3, #2
 8001106:	d901      	bls.n	800110c <HAL_RCC_OscConfig+0x3b4>
 8001108:	2303      	movs	r3, #3
 800110a:	e237      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 800110c:	4b53      	ldr	r3, [pc, #332]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800110e:	681b      	ldr	r3, [r3, #0]
 8001110:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8001114:	2b00      	cmp	r3, #0
 8001116:	d1f0      	bne.n	80010fa <HAL_RCC_OscConfig+0x3a2>
 8001118:	687b      	ldr	r3, [r7, #4]
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	f003 0308 	and.w	r3, r3, #8
 8001120:	2b00      	cmp	r3, #0
 8001122:	d03c      	beq.n	800119e <HAL_RCC_OscConfig+0x446>
 8001124:	687b      	ldr	r3, [r7, #4]
 8001126:	695b      	ldr	r3, [r3, #20]
 8001128:	2b00      	cmp	r3, #0
 800112a:	d01c      	beq.n	8001166 <HAL_RCC_OscConfig+0x40e>
 800112c:	4b4b      	ldr	r3, [pc, #300]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800112e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001132:	4a4a      	ldr	r2, [pc, #296]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001134:	f043 0301 	orr.w	r3, r3, #1
 8001138:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 800113c:	f7ff fcb6 	bl	8000aac <HAL_GetTick>
 8001140:	6138      	str	r0, [r7, #16]
 8001142:	e008      	b.n	8001156 <HAL_RCC_OscConfig+0x3fe>
 8001144:	f7ff fcb2 	bl	8000aac <HAL_GetTick>
 8001148:	4602      	mov	r2, r0
 800114a:	693b      	ldr	r3, [r7, #16]
 800114c:	1ad3      	subs	r3, r2, r3
 800114e:	2b02      	cmp	r3, #2
 8001150:	d901      	bls.n	8001156 <HAL_RCC_OscConfig+0x3fe>
 8001152:	2303      	movs	r3, #3
 8001154:	e212      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001156:	4b41      	ldr	r3, [pc, #260]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001158:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800115c:	f003 0302 	and.w	r3, r3, #2
 8001160:	2b00      	cmp	r3, #0
 8001162:	d0ef      	beq.n	8001144 <HAL_RCC_OscConfig+0x3ec>
 8001164:	e01b      	b.n	800119e <HAL_RCC_OscConfig+0x446>
 8001166:	4b3d      	ldr	r3, [pc, #244]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001168:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800116c:	4a3b      	ldr	r2, [pc, #236]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800116e:	f023 0301 	bic.w	r3, r3, #1
 8001172:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8001176:	f7ff fc99 	bl	8000aac <HAL_GetTick>
 800117a:	6138      	str	r0, [r7, #16]
 800117c:	e008      	b.n	8001190 <HAL_RCC_OscConfig+0x438>
 800117e:	f7ff fc95 	bl	8000aac <HAL_GetTick>
 8001182:	4602      	mov	r2, r0
 8001184:	693b      	ldr	r3, [r7, #16]
 8001186:	1ad3      	subs	r3, r2, r3
 8001188:	2b02      	cmp	r3, #2
 800118a:	d901      	bls.n	8001190 <HAL_RCC_OscConfig+0x438>
 800118c:	2303      	movs	r3, #3
 800118e:	e1f5      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001190:	4b32      	ldr	r3, [pc, #200]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001192:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8001196:	f003 0302 	and.w	r3, r3, #2
 800119a:	2b00      	cmp	r3, #0
 800119c:	d1ef      	bne.n	800117e <HAL_RCC_OscConfig+0x426>
 800119e:	687b      	ldr	r3, [r7, #4]
 80011a0:	681b      	ldr	r3, [r3, #0]
 80011a2:	f003 0304 	and.w	r3, r3, #4
 80011a6:	2b00      	cmp	r3, #0
 80011a8:	f000 80a6 	beq.w	80012f8 <HAL_RCC_OscConfig+0x5a0>
 80011ac:	2300      	movs	r3, #0
 80011ae:	77fb      	strb	r3, [r7, #31]
 80011b0:	4b2a      	ldr	r3, [pc, #168]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80011b2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80011b4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d10d      	bne.n	80011d8 <HAL_RCC_OscConfig+0x480>
 80011bc:	4b27      	ldr	r3, [pc, #156]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80011be:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80011c0:	4a26      	ldr	r2, [pc, #152]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80011c2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80011c6:	6593      	str	r3, [r2, #88]	@ 0x58
 80011c8:	4b24      	ldr	r3, [pc, #144]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 80011ca:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80011cc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80011d0:	60bb      	str	r3, [r7, #8]
 80011d2:	68bb      	ldr	r3, [r7, #8]
 80011d4:	2301      	movs	r3, #1
 80011d6:	77fb      	strb	r3, [r7, #31]
 80011d8:	4b21      	ldr	r3, [pc, #132]	@ (8001260 <HAL_RCC_OscConfig+0x508>)
 80011da:	681b      	ldr	r3, [r3, #0]
 80011dc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80011e0:	2b00      	cmp	r3, #0
 80011e2:	d118      	bne.n	8001216 <HAL_RCC_OscConfig+0x4be>
 80011e4:	4b1e      	ldr	r3, [pc, #120]	@ (8001260 <HAL_RCC_OscConfig+0x508>)
 80011e6:	681b      	ldr	r3, [r3, #0]
 80011e8:	4a1d      	ldr	r2, [pc, #116]	@ (8001260 <HAL_RCC_OscConfig+0x508>)
 80011ea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80011ee:	6013      	str	r3, [r2, #0]
 80011f0:	f7ff fc5c 	bl	8000aac <HAL_GetTick>
 80011f4:	6138      	str	r0, [r7, #16]
 80011f6:	e008      	b.n	800120a <HAL_RCC_OscConfig+0x4b2>
 80011f8:	f7ff fc58 	bl	8000aac <HAL_GetTick>
 80011fc:	4602      	mov	r2, r0
 80011fe:	693b      	ldr	r3, [r7, #16]
 8001200:	1ad3      	subs	r3, r2, r3
 8001202:	2b02      	cmp	r3, #2
 8001204:	d901      	bls.n	800120a <HAL_RCC_OscConfig+0x4b2>
 8001206:	2303      	movs	r3, #3
 8001208:	e1b8      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 800120a:	4b15      	ldr	r3, [pc, #84]	@ (8001260 <HAL_RCC_OscConfig+0x508>)
 800120c:	681b      	ldr	r3, [r3, #0]
 800120e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001212:	2b00      	cmp	r3, #0
 8001214:	d0f0      	beq.n	80011f8 <HAL_RCC_OscConfig+0x4a0>
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	689b      	ldr	r3, [r3, #8]
 800121a:	2b01      	cmp	r3, #1
 800121c:	d108      	bne.n	8001230 <HAL_RCC_OscConfig+0x4d8>
 800121e:	4b0f      	ldr	r3, [pc, #60]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001220:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8001224:	4a0d      	ldr	r2, [pc, #52]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001226:	f043 0301 	orr.w	r3, r3, #1
 800122a:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 800122e:	e029      	b.n	8001284 <HAL_RCC_OscConfig+0x52c>
 8001230:	687b      	ldr	r3, [r7, #4]
 8001232:	689b      	ldr	r3, [r3, #8]
 8001234:	2b05      	cmp	r3, #5
 8001236:	d115      	bne.n	8001264 <HAL_RCC_OscConfig+0x50c>
 8001238:	4b08      	ldr	r3, [pc, #32]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800123a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800123e:	4a07      	ldr	r2, [pc, #28]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001240:	f043 0304 	orr.w	r3, r3, #4
 8001244:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001248:	4b04      	ldr	r3, [pc, #16]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 800124a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800124e:	4a03      	ldr	r2, [pc, #12]	@ (800125c <HAL_RCC_OscConfig+0x504>)
 8001250:	f043 0301 	orr.w	r3, r3, #1
 8001254:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001258:	e014      	b.n	8001284 <HAL_RCC_OscConfig+0x52c>
 800125a:	bf00      	nop
 800125c:	40021000 	.word	0x40021000
 8001260:	40007000 	.word	0x40007000
 8001264:	4b9d      	ldr	r3, [pc, #628]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001266:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800126a:	4a9c      	ldr	r2, [pc, #624]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800126c:	f023 0301 	bic.w	r3, r3, #1
 8001270:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001274:	4b99      	ldr	r3, [pc, #612]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001276:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800127a:	4a98      	ldr	r2, [pc, #608]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800127c:	f023 0304 	bic.w	r3, r3, #4
 8001280:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8001284:	687b      	ldr	r3, [r7, #4]
 8001286:	689b      	ldr	r3, [r3, #8]
 8001288:	2b00      	cmp	r3, #0
 800128a:	d016      	beq.n	80012ba <HAL_RCC_OscConfig+0x562>
 800128c:	f7ff fc0e 	bl	8000aac <HAL_GetTick>
 8001290:	6138      	str	r0, [r7, #16]
 8001292:	e00a      	b.n	80012aa <HAL_RCC_OscConfig+0x552>
 8001294:	f7ff fc0a 	bl	8000aac <HAL_GetTick>
 8001298:	4602      	mov	r2, r0
 800129a:	693b      	ldr	r3, [r7, #16]
 800129c:	1ad3      	subs	r3, r2, r3
 800129e:	f241 3288 	movw	r2, #5000	@ 0x1388
 80012a2:	4293      	cmp	r3, r2
 80012a4:	d901      	bls.n	80012aa <HAL_RCC_OscConfig+0x552>
 80012a6:	2303      	movs	r3, #3
 80012a8:	e168      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 80012aa:	4b8c      	ldr	r3, [pc, #560]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80012ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80012b0:	f003 0302 	and.w	r3, r3, #2
 80012b4:	2b00      	cmp	r3, #0
 80012b6:	d0ed      	beq.n	8001294 <HAL_RCC_OscConfig+0x53c>
 80012b8:	e015      	b.n	80012e6 <HAL_RCC_OscConfig+0x58e>
 80012ba:	f7ff fbf7 	bl	8000aac <HAL_GetTick>
 80012be:	6138      	str	r0, [r7, #16]
 80012c0:	e00a      	b.n	80012d8 <HAL_RCC_OscConfig+0x580>
 80012c2:	f7ff fbf3 	bl	8000aac <HAL_GetTick>
 80012c6:	4602      	mov	r2, r0
 80012c8:	693b      	ldr	r3, [r7, #16]
 80012ca:	1ad3      	subs	r3, r2, r3
 80012cc:	f241 3288 	movw	r2, #5000	@ 0x1388
 80012d0:	4293      	cmp	r3, r2
 80012d2:	d901      	bls.n	80012d8 <HAL_RCC_OscConfig+0x580>
 80012d4:	2303      	movs	r3, #3
 80012d6:	e151      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 80012d8:	4b80      	ldr	r3, [pc, #512]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80012da:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80012de:	f003 0302 	and.w	r3, r3, #2
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d1ed      	bne.n	80012c2 <HAL_RCC_OscConfig+0x56a>
 80012e6:	7ffb      	ldrb	r3, [r7, #31]
 80012e8:	2b01      	cmp	r3, #1
 80012ea:	d105      	bne.n	80012f8 <HAL_RCC_OscConfig+0x5a0>
 80012ec:	4b7b      	ldr	r3, [pc, #492]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80012ee:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80012f0:	4a7a      	ldr	r2, [pc, #488]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80012f2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80012f6:	6593      	str	r3, [r2, #88]	@ 0x58
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	681b      	ldr	r3, [r3, #0]
 80012fc:	f003 0320 	and.w	r3, r3, #32
 8001300:	2b00      	cmp	r3, #0
 8001302:	d03c      	beq.n	800137e <HAL_RCC_OscConfig+0x626>
 8001304:	687b      	ldr	r3, [r7, #4]
 8001306:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8001308:	2b00      	cmp	r3, #0
 800130a:	d01c      	beq.n	8001346 <HAL_RCC_OscConfig+0x5ee>
 800130c:	4b73      	ldr	r3, [pc, #460]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800130e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8001312:	4a72      	ldr	r2, [pc, #456]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001314:	f043 0301 	orr.w	r3, r3, #1
 8001318:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 800131c:	f7ff fbc6 	bl	8000aac <HAL_GetTick>
 8001320:	6138      	str	r0, [r7, #16]
 8001322:	e008      	b.n	8001336 <HAL_RCC_OscConfig+0x5de>
 8001324:	f7ff fbc2 	bl	8000aac <HAL_GetTick>
 8001328:	4602      	mov	r2, r0
 800132a:	693b      	ldr	r3, [r7, #16]
 800132c:	1ad3      	subs	r3, r2, r3
 800132e:	2b02      	cmp	r3, #2
 8001330:	d901      	bls.n	8001336 <HAL_RCC_OscConfig+0x5de>
 8001332:	2303      	movs	r3, #3
 8001334:	e122      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001336:	4b69      	ldr	r3, [pc, #420]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001338:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800133c:	f003 0302 	and.w	r3, r3, #2
 8001340:	2b00      	cmp	r3, #0
 8001342:	d0ef      	beq.n	8001324 <HAL_RCC_OscConfig+0x5cc>
 8001344:	e01b      	b.n	800137e <HAL_RCC_OscConfig+0x626>
 8001346:	4b65      	ldr	r3, [pc, #404]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001348:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800134c:	4a63      	ldr	r2, [pc, #396]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800134e:	f023 0301 	bic.w	r3, r3, #1
 8001352:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98
 8001356:	f7ff fba9 	bl	8000aac <HAL_GetTick>
 800135a:	6138      	str	r0, [r7, #16]
 800135c:	e008      	b.n	8001370 <HAL_RCC_OscConfig+0x618>
 800135e:	f7ff fba5 	bl	8000aac <HAL_GetTick>
 8001362:	4602      	mov	r2, r0
 8001364:	693b      	ldr	r3, [r7, #16]
 8001366:	1ad3      	subs	r3, r2, r3
 8001368:	2b02      	cmp	r3, #2
 800136a:	d901      	bls.n	8001370 <HAL_RCC_OscConfig+0x618>
 800136c:	2303      	movs	r3, #3
 800136e:	e105      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001370:	4b5a      	ldr	r3, [pc, #360]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001372:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8001376:	f003 0302 	and.w	r3, r3, #2
 800137a:	2b00      	cmp	r3, #0
 800137c:	d1ef      	bne.n	800135e <HAL_RCC_OscConfig+0x606>
 800137e:	687b      	ldr	r3, [r7, #4]
 8001380:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8001382:	2b00      	cmp	r3, #0
 8001384:	f000 80f9 	beq.w	800157a <HAL_RCC_OscConfig+0x822>
 8001388:	687b      	ldr	r3, [r7, #4]
 800138a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800138c:	2b02      	cmp	r3, #2
 800138e:	f040 80cf 	bne.w	8001530 <HAL_RCC_OscConfig+0x7d8>
 8001392:	4b52      	ldr	r3, [pc, #328]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001394:	68db      	ldr	r3, [r3, #12]
 8001396:	617b      	str	r3, [r7, #20]
 8001398:	697b      	ldr	r3, [r7, #20]
 800139a:	f003 0203 	and.w	r2, r3, #3
 800139e:	687b      	ldr	r3, [r7, #4]
 80013a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80013a2:	429a      	cmp	r2, r3
 80013a4:	d12c      	bne.n	8001400 <HAL_RCC_OscConfig+0x6a8>
 80013a6:	697b      	ldr	r3, [r7, #20]
 80013a8:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80013ac:	687b      	ldr	r3, [r7, #4]
 80013ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80013b0:	3b01      	subs	r3, #1
 80013b2:	011b      	lsls	r3, r3, #4
 80013b4:	429a      	cmp	r2, r3
 80013b6:	d123      	bne.n	8001400 <HAL_RCC_OscConfig+0x6a8>
 80013b8:	697b      	ldr	r3, [r7, #20]
 80013ba:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 80013be:	687b      	ldr	r3, [r7, #4]
 80013c0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80013c2:	021b      	lsls	r3, r3, #8
 80013c4:	429a      	cmp	r2, r3
 80013c6:	d11b      	bne.n	8001400 <HAL_RCC_OscConfig+0x6a8>
 80013c8:	697b      	ldr	r3, [r7, #20]
 80013ca:	f003 4278 	and.w	r2, r3, #4160749568	@ 0xf8000000
 80013ce:	687b      	ldr	r3, [r7, #4]
 80013d0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80013d2:	06db      	lsls	r3, r3, #27
 80013d4:	429a      	cmp	r2, r3
 80013d6:	d113      	bne.n	8001400 <HAL_RCC_OscConfig+0x6a8>
 80013d8:	697b      	ldr	r3, [r7, #20]
 80013da:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 80013de:	687b      	ldr	r3, [r7, #4]
 80013e0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80013e2:	085b      	lsrs	r3, r3, #1
 80013e4:	3b01      	subs	r3, #1
 80013e6:	055b      	lsls	r3, r3, #21
 80013e8:	429a      	cmp	r2, r3
 80013ea:	d109      	bne.n	8001400 <HAL_RCC_OscConfig+0x6a8>
 80013ec:	697b      	ldr	r3, [r7, #20]
 80013ee:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80013f6:	085b      	lsrs	r3, r3, #1
 80013f8:	3b01      	subs	r3, #1
 80013fa:	065b      	lsls	r3, r3, #25
 80013fc:	429a      	cmp	r2, r3
 80013fe:	d071      	beq.n	80014e4 <HAL_RCC_OscConfig+0x78c>
 8001400:	69bb      	ldr	r3, [r7, #24]
 8001402:	2b0c      	cmp	r3, #12
 8001404:	d068      	beq.n	80014d8 <HAL_RCC_OscConfig+0x780>
 8001406:	4b35      	ldr	r3, [pc, #212]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800140e:	2b00      	cmp	r3, #0
 8001410:	d105      	bne.n	800141e <HAL_RCC_OscConfig+0x6c6>
 8001412:	4b32      	ldr	r3, [pc, #200]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001414:	681b      	ldr	r3, [r3, #0]
 8001416:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800141a:	2b00      	cmp	r3, #0
 800141c:	d001      	beq.n	8001422 <HAL_RCC_OscConfig+0x6ca>
 800141e:	2301      	movs	r3, #1
 8001420:	e0ac      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001422:	4b2e      	ldr	r3, [pc, #184]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	4a2d      	ldr	r2, [pc, #180]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001428:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800142c:	6013      	str	r3, [r2, #0]
 800142e:	f7ff fb3d 	bl	8000aac <HAL_GetTick>
 8001432:	6138      	str	r0, [r7, #16]
 8001434:	e008      	b.n	8001448 <HAL_RCC_OscConfig+0x6f0>
 8001436:	f7ff fb39 	bl	8000aac <HAL_GetTick>
 800143a:	4602      	mov	r2, r0
 800143c:	693b      	ldr	r3, [r7, #16]
 800143e:	1ad3      	subs	r3, r2, r3
 8001440:	2b02      	cmp	r3, #2
 8001442:	d901      	bls.n	8001448 <HAL_RCC_OscConfig+0x6f0>
 8001444:	2303      	movs	r3, #3
 8001446:	e099      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001448:	4b24      	ldr	r3, [pc, #144]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800144a:	681b      	ldr	r3, [r3, #0]
 800144c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001450:	2b00      	cmp	r3, #0
 8001452:	d1f0      	bne.n	8001436 <HAL_RCC_OscConfig+0x6de>
 8001454:	4b21      	ldr	r3, [pc, #132]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001456:	68da      	ldr	r2, [r3, #12]
 8001458:	4b21      	ldr	r3, [pc, #132]	@ (80014e0 <HAL_RCC_OscConfig+0x788>)
 800145a:	4013      	ands	r3, r2
 800145c:	687a      	ldr	r2, [r7, #4]
 800145e:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8001460:	687a      	ldr	r2, [r7, #4]
 8001462:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8001464:	3a01      	subs	r2, #1
 8001466:	0112      	lsls	r2, r2, #4
 8001468:	4311      	orrs	r1, r2
 800146a:	687a      	ldr	r2, [r7, #4]
 800146c:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800146e:	0212      	lsls	r2, r2, #8
 8001470:	4311      	orrs	r1, r2
 8001472:	687a      	ldr	r2, [r7, #4]
 8001474:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 8001476:	0852      	lsrs	r2, r2, #1
 8001478:	3a01      	subs	r2, #1
 800147a:	0552      	lsls	r2, r2, #21
 800147c:	4311      	orrs	r1, r2
 800147e:	687a      	ldr	r2, [r7, #4]
 8001480:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8001482:	0852      	lsrs	r2, r2, #1
 8001484:	3a01      	subs	r2, #1
 8001486:	0652      	lsls	r2, r2, #25
 8001488:	4311      	orrs	r1, r2
 800148a:	687a      	ldr	r2, [r7, #4]
 800148c:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800148e:	06d2      	lsls	r2, r2, #27
 8001490:	430a      	orrs	r2, r1
 8001492:	4912      	ldr	r1, [pc, #72]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 8001494:	4313      	orrs	r3, r2
 8001496:	60cb      	str	r3, [r1, #12]
 8001498:	4b10      	ldr	r3, [pc, #64]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800149a:	681b      	ldr	r3, [r3, #0]
 800149c:	4a0f      	ldr	r2, [pc, #60]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 800149e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80014a2:	6013      	str	r3, [r2, #0]
 80014a4:	4b0d      	ldr	r3, [pc, #52]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80014a6:	68db      	ldr	r3, [r3, #12]
 80014a8:	4a0c      	ldr	r2, [pc, #48]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80014aa:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80014ae:	60d3      	str	r3, [r2, #12]
 80014b0:	f7ff fafc 	bl	8000aac <HAL_GetTick>
 80014b4:	6138      	str	r0, [r7, #16]
 80014b6:	e008      	b.n	80014ca <HAL_RCC_OscConfig+0x772>
 80014b8:	f7ff faf8 	bl	8000aac <HAL_GetTick>
 80014bc:	4602      	mov	r2, r0
 80014be:	693b      	ldr	r3, [r7, #16]
 80014c0:	1ad3      	subs	r3, r2, r3
 80014c2:	2b02      	cmp	r3, #2
 80014c4:	d901      	bls.n	80014ca <HAL_RCC_OscConfig+0x772>
 80014c6:	2303      	movs	r3, #3
 80014c8:	e058      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 80014ca:	4b04      	ldr	r3, [pc, #16]	@ (80014dc <HAL_RCC_OscConfig+0x784>)
 80014cc:	681b      	ldr	r3, [r3, #0]
 80014ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80014d2:	2b00      	cmp	r3, #0
 80014d4:	d0f0      	beq.n	80014b8 <HAL_RCC_OscConfig+0x760>
 80014d6:	e050      	b.n	800157a <HAL_RCC_OscConfig+0x822>
 80014d8:	2301      	movs	r3, #1
 80014da:	e04f      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 80014dc:	40021000 	.word	0x40021000
 80014e0:	019d808c 	.word	0x019d808c
 80014e4:	4b27      	ldr	r3, [pc, #156]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d144      	bne.n	800157a <HAL_RCC_OscConfig+0x822>
 80014f0:	4b24      	ldr	r3, [pc, #144]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	4a23      	ldr	r2, [pc, #140]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 80014f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80014fa:	6013      	str	r3, [r2, #0]
 80014fc:	4b21      	ldr	r3, [pc, #132]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 80014fe:	68db      	ldr	r3, [r3, #12]
 8001500:	4a20      	ldr	r2, [pc, #128]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 8001502:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001506:	60d3      	str	r3, [r2, #12]
 8001508:	f7ff fad0 	bl	8000aac <HAL_GetTick>
 800150c:	6138      	str	r0, [r7, #16]
 800150e:	e008      	b.n	8001522 <HAL_RCC_OscConfig+0x7ca>
 8001510:	f7ff facc 	bl	8000aac <HAL_GetTick>
 8001514:	4602      	mov	r2, r0
 8001516:	693b      	ldr	r3, [r7, #16]
 8001518:	1ad3      	subs	r3, r2, r3
 800151a:	2b02      	cmp	r3, #2
 800151c:	d901      	bls.n	8001522 <HAL_RCC_OscConfig+0x7ca>
 800151e:	2303      	movs	r3, #3
 8001520:	e02c      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 8001522:	4b18      	ldr	r3, [pc, #96]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 8001524:	681b      	ldr	r3, [r3, #0]
 8001526:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800152a:	2b00      	cmp	r3, #0
 800152c:	d0f0      	beq.n	8001510 <HAL_RCC_OscConfig+0x7b8>
 800152e:	e024      	b.n	800157a <HAL_RCC_OscConfig+0x822>
 8001530:	69bb      	ldr	r3, [r7, #24]
 8001532:	2b0c      	cmp	r3, #12
 8001534:	d01f      	beq.n	8001576 <HAL_RCC_OscConfig+0x81e>
 8001536:	4b13      	ldr	r3, [pc, #76]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 8001538:	681b      	ldr	r3, [r3, #0]
 800153a:	4a12      	ldr	r2, [pc, #72]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 800153c:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8001540:	6013      	str	r3, [r2, #0]
 8001542:	f7ff fab3 	bl	8000aac <HAL_GetTick>
 8001546:	6138      	str	r0, [r7, #16]
 8001548:	e008      	b.n	800155c <HAL_RCC_OscConfig+0x804>
 800154a:	f7ff faaf 	bl	8000aac <HAL_GetTick>
 800154e:	4602      	mov	r2, r0
 8001550:	693b      	ldr	r3, [r7, #16]
 8001552:	1ad3      	subs	r3, r2, r3
 8001554:	2b02      	cmp	r3, #2
 8001556:	d901      	bls.n	800155c <HAL_RCC_OscConfig+0x804>
 8001558:	2303      	movs	r3, #3
 800155a:	e00f      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 800155c:	4b09      	ldr	r3, [pc, #36]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 800155e:	681b      	ldr	r3, [r3, #0]
 8001560:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8001564:	2b00      	cmp	r3, #0
 8001566:	d1f0      	bne.n	800154a <HAL_RCC_OscConfig+0x7f2>
 8001568:	4b06      	ldr	r3, [pc, #24]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 800156a:	68da      	ldr	r2, [r3, #12]
 800156c:	4905      	ldr	r1, [pc, #20]	@ (8001584 <HAL_RCC_OscConfig+0x82c>)
 800156e:	4b06      	ldr	r3, [pc, #24]	@ (8001588 <HAL_RCC_OscConfig+0x830>)
 8001570:	4013      	ands	r3, r2
 8001572:	60cb      	str	r3, [r1, #12]
 8001574:	e001      	b.n	800157a <HAL_RCC_OscConfig+0x822>
 8001576:	2301      	movs	r3, #1
 8001578:	e000      	b.n	800157c <HAL_RCC_OscConfig+0x824>
 800157a:	2300      	movs	r3, #0
 800157c:	4618      	mov	r0, r3
 800157e:	3720      	adds	r7, #32
 8001580:	46bd      	mov	sp, r7
 8001582:	bd80      	pop	{r7, pc}
 8001584:	40021000 	.word	0x40021000
 8001588:	feeefffc 	.word	0xfeeefffc

0800158c <HAL_RCC_ClockConfig>:
 800158c:	b580      	push	{r7, lr}
 800158e:	b084      	sub	sp, #16
 8001590:	af00      	add	r7, sp, #0
 8001592:	6078      	str	r0, [r7, #4]
 8001594:	6039      	str	r1, [r7, #0]
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	2b00      	cmp	r3, #0
 800159a:	d101      	bne.n	80015a0 <HAL_RCC_ClockConfig+0x14>
 800159c:	2301      	movs	r3, #1
 800159e:	e0e7      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 80015a0:	4b75      	ldr	r3, [pc, #468]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	f003 0307 	and.w	r3, r3, #7
 80015a8:	683a      	ldr	r2, [r7, #0]
 80015aa:	429a      	cmp	r2, r3
 80015ac:	d910      	bls.n	80015d0 <HAL_RCC_ClockConfig+0x44>
 80015ae:	4b72      	ldr	r3, [pc, #456]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	f023 0207 	bic.w	r2, r3, #7
 80015b6:	4970      	ldr	r1, [pc, #448]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80015b8:	683b      	ldr	r3, [r7, #0]
 80015ba:	4313      	orrs	r3, r2
 80015bc:	600b      	str	r3, [r1, #0]
 80015be:	4b6e      	ldr	r3, [pc, #440]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80015c0:	681b      	ldr	r3, [r3, #0]
 80015c2:	f003 0307 	and.w	r3, r3, #7
 80015c6:	683a      	ldr	r2, [r7, #0]
 80015c8:	429a      	cmp	r2, r3
 80015ca:	d001      	beq.n	80015d0 <HAL_RCC_ClockConfig+0x44>
 80015cc:	2301      	movs	r3, #1
 80015ce:	e0cf      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	681b      	ldr	r3, [r3, #0]
 80015d4:	f003 0302 	and.w	r3, r3, #2
 80015d8:	2b00      	cmp	r3, #0
 80015da:	d010      	beq.n	80015fe <HAL_RCC_ClockConfig+0x72>
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	689a      	ldr	r2, [r3, #8]
 80015e0:	4b66      	ldr	r3, [pc, #408]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80015e2:	689b      	ldr	r3, [r3, #8]
 80015e4:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80015e8:	429a      	cmp	r2, r3
 80015ea:	d908      	bls.n	80015fe <HAL_RCC_ClockConfig+0x72>
 80015ec:	4b63      	ldr	r3, [pc, #396]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80015ee:	689b      	ldr	r3, [r3, #8]
 80015f0:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80015f4:	687b      	ldr	r3, [r7, #4]
 80015f6:	689b      	ldr	r3, [r3, #8]
 80015f8:	4960      	ldr	r1, [pc, #384]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80015fa:	4313      	orrs	r3, r2
 80015fc:	608b      	str	r3, [r1, #8]
 80015fe:	687b      	ldr	r3, [r7, #4]
 8001600:	681b      	ldr	r3, [r3, #0]
 8001602:	f003 0301 	and.w	r3, r3, #1
 8001606:	2b00      	cmp	r3, #0
 8001608:	d04c      	beq.n	80016a4 <HAL_RCC_ClockConfig+0x118>
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	685b      	ldr	r3, [r3, #4]
 800160e:	2b03      	cmp	r3, #3
 8001610:	d107      	bne.n	8001622 <HAL_RCC_ClockConfig+0x96>
 8001612:	4b5a      	ldr	r3, [pc, #360]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001614:	681b      	ldr	r3, [r3, #0]
 8001616:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800161a:	2b00      	cmp	r3, #0
 800161c:	d121      	bne.n	8001662 <HAL_RCC_ClockConfig+0xd6>
 800161e:	2301      	movs	r3, #1
 8001620:	e0a6      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 8001622:	687b      	ldr	r3, [r7, #4]
 8001624:	685b      	ldr	r3, [r3, #4]
 8001626:	2b02      	cmp	r3, #2
 8001628:	d107      	bne.n	800163a <HAL_RCC_ClockConfig+0xae>
 800162a:	4b54      	ldr	r3, [pc, #336]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 800162c:	681b      	ldr	r3, [r3, #0]
 800162e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001632:	2b00      	cmp	r3, #0
 8001634:	d115      	bne.n	8001662 <HAL_RCC_ClockConfig+0xd6>
 8001636:	2301      	movs	r3, #1
 8001638:	e09a      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 800163a:	687b      	ldr	r3, [r7, #4]
 800163c:	685b      	ldr	r3, [r3, #4]
 800163e:	2b00      	cmp	r3, #0
 8001640:	d107      	bne.n	8001652 <HAL_RCC_ClockConfig+0xc6>
 8001642:	4b4e      	ldr	r3, [pc, #312]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001644:	681b      	ldr	r3, [r3, #0]
 8001646:	f003 0302 	and.w	r3, r3, #2
 800164a:	2b00      	cmp	r3, #0
 800164c:	d109      	bne.n	8001662 <HAL_RCC_ClockConfig+0xd6>
 800164e:	2301      	movs	r3, #1
 8001650:	e08e      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 8001652:	4b4a      	ldr	r3, [pc, #296]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800165a:	2b00      	cmp	r3, #0
 800165c:	d101      	bne.n	8001662 <HAL_RCC_ClockConfig+0xd6>
 800165e:	2301      	movs	r3, #1
 8001660:	e086      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 8001662:	4b46      	ldr	r3, [pc, #280]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001664:	689b      	ldr	r3, [r3, #8]
 8001666:	f023 0203 	bic.w	r2, r3, #3
 800166a:	687b      	ldr	r3, [r7, #4]
 800166c:	685b      	ldr	r3, [r3, #4]
 800166e:	4943      	ldr	r1, [pc, #268]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001670:	4313      	orrs	r3, r2
 8001672:	608b      	str	r3, [r1, #8]
 8001674:	f7ff fa1a 	bl	8000aac <HAL_GetTick>
 8001678:	60f8      	str	r0, [r7, #12]
 800167a:	e00a      	b.n	8001692 <HAL_RCC_ClockConfig+0x106>
 800167c:	f7ff fa16 	bl	8000aac <HAL_GetTick>
 8001680:	4602      	mov	r2, r0
 8001682:	68fb      	ldr	r3, [r7, #12]
 8001684:	1ad3      	subs	r3, r2, r3
 8001686:	f241 3288 	movw	r2, #5000	@ 0x1388
 800168a:	4293      	cmp	r3, r2
 800168c:	d901      	bls.n	8001692 <HAL_RCC_ClockConfig+0x106>
 800168e:	2303      	movs	r3, #3
 8001690:	e06e      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 8001692:	4b3a      	ldr	r3, [pc, #232]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001694:	689b      	ldr	r3, [r3, #8]
 8001696:	f003 020c 	and.w	r2, r3, #12
 800169a:	687b      	ldr	r3, [r7, #4]
 800169c:	685b      	ldr	r3, [r3, #4]
 800169e:	009b      	lsls	r3, r3, #2
 80016a0:	429a      	cmp	r2, r3
 80016a2:	d1eb      	bne.n	800167c <HAL_RCC_ClockConfig+0xf0>
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	f003 0302 	and.w	r3, r3, #2
 80016ac:	2b00      	cmp	r3, #0
 80016ae:	d010      	beq.n	80016d2 <HAL_RCC_ClockConfig+0x146>
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	689a      	ldr	r2, [r3, #8]
 80016b4:	4b31      	ldr	r3, [pc, #196]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80016b6:	689b      	ldr	r3, [r3, #8]
 80016b8:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80016bc:	429a      	cmp	r2, r3
 80016be:	d208      	bcs.n	80016d2 <HAL_RCC_ClockConfig+0x146>
 80016c0:	4b2e      	ldr	r3, [pc, #184]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80016c2:	689b      	ldr	r3, [r3, #8]
 80016c4:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	689b      	ldr	r3, [r3, #8]
 80016cc:	492b      	ldr	r1, [pc, #172]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 80016ce:	4313      	orrs	r3, r2
 80016d0:	608b      	str	r3, [r1, #8]
 80016d2:	4b29      	ldr	r3, [pc, #164]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80016d4:	681b      	ldr	r3, [r3, #0]
 80016d6:	f003 0307 	and.w	r3, r3, #7
 80016da:	683a      	ldr	r2, [r7, #0]
 80016dc:	429a      	cmp	r2, r3
 80016de:	d210      	bcs.n	8001702 <HAL_RCC_ClockConfig+0x176>
 80016e0:	4b25      	ldr	r3, [pc, #148]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	f023 0207 	bic.w	r2, r3, #7
 80016e8:	4923      	ldr	r1, [pc, #140]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80016ea:	683b      	ldr	r3, [r7, #0]
 80016ec:	4313      	orrs	r3, r2
 80016ee:	600b      	str	r3, [r1, #0]
 80016f0:	4b21      	ldr	r3, [pc, #132]	@ (8001778 <HAL_RCC_ClockConfig+0x1ec>)
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	f003 0307 	and.w	r3, r3, #7
 80016f8:	683a      	ldr	r2, [r7, #0]
 80016fa:	429a      	cmp	r2, r3
 80016fc:	d001      	beq.n	8001702 <HAL_RCC_ClockConfig+0x176>
 80016fe:	2301      	movs	r3, #1
 8001700:	e036      	b.n	8001770 <HAL_RCC_ClockConfig+0x1e4>
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	681b      	ldr	r3, [r3, #0]
 8001706:	f003 0304 	and.w	r3, r3, #4
 800170a:	2b00      	cmp	r3, #0
 800170c:	d008      	beq.n	8001720 <HAL_RCC_ClockConfig+0x194>
 800170e:	4b1b      	ldr	r3, [pc, #108]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001710:	689b      	ldr	r3, [r3, #8]
 8001712:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8001716:	687b      	ldr	r3, [r7, #4]
 8001718:	68db      	ldr	r3, [r3, #12]
 800171a:	4918      	ldr	r1, [pc, #96]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 800171c:	4313      	orrs	r3, r2
 800171e:	608b      	str	r3, [r1, #8]
 8001720:	687b      	ldr	r3, [r7, #4]
 8001722:	681b      	ldr	r3, [r3, #0]
 8001724:	f003 0308 	and.w	r3, r3, #8
 8001728:	2b00      	cmp	r3, #0
 800172a:	d009      	beq.n	8001740 <HAL_RCC_ClockConfig+0x1b4>
 800172c:	4b13      	ldr	r3, [pc, #76]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 800172e:	689b      	ldr	r3, [r3, #8]
 8001730:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8001734:	687b      	ldr	r3, [r7, #4]
 8001736:	691b      	ldr	r3, [r3, #16]
 8001738:	00db      	lsls	r3, r3, #3
 800173a:	4910      	ldr	r1, [pc, #64]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 800173c:	4313      	orrs	r3, r2
 800173e:	608b      	str	r3, [r1, #8]
 8001740:	f000 f824 	bl	800178c <HAL_RCC_GetSysClockFreq>
 8001744:	4602      	mov	r2, r0
 8001746:	4b0d      	ldr	r3, [pc, #52]	@ (800177c <HAL_RCC_ClockConfig+0x1f0>)
 8001748:	689b      	ldr	r3, [r3, #8]
 800174a:	091b      	lsrs	r3, r3, #4
 800174c:	f003 030f 	and.w	r3, r3, #15
 8001750:	490b      	ldr	r1, [pc, #44]	@ (8001780 <HAL_RCC_ClockConfig+0x1f4>)
 8001752:	5ccb      	ldrb	r3, [r1, r3]
 8001754:	f003 031f 	and.w	r3, r3, #31
 8001758:	fa22 f303 	lsr.w	r3, r2, r3
 800175c:	4a09      	ldr	r2, [pc, #36]	@ (8001784 <HAL_RCC_ClockConfig+0x1f8>)
 800175e:	6013      	str	r3, [r2, #0]
 8001760:	4b09      	ldr	r3, [pc, #36]	@ (8001788 <HAL_RCC_ClockConfig+0x1fc>)
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	4618      	mov	r0, r3
 8001766:	f7ff f951 	bl	8000a0c <HAL_InitTick>
 800176a:	4603      	mov	r3, r0
 800176c:	72fb      	strb	r3, [r7, #11]
 800176e:	7afb      	ldrb	r3, [r7, #11]
 8001770:	4618      	mov	r0, r3
 8001772:	3710      	adds	r7, #16
 8001774:	46bd      	mov	sp, r7
 8001776:	bd80      	pop	{r7, pc}
 8001778:	40022000 	.word	0x40022000
 800177c:	40021000 	.word	0x40021000
 8001780:	080019d4 	.word	0x080019d4
 8001784:	20000000 	.word	0x20000000
 8001788:	20000004 	.word	0x20000004

0800178c <HAL_RCC_GetSysClockFreq>:
 800178c:	b480      	push	{r7}
 800178e:	b089      	sub	sp, #36	@ 0x24
 8001790:	af00      	add	r7, sp, #0
 8001792:	2300      	movs	r3, #0
 8001794:	61fb      	str	r3, [r7, #28]
 8001796:	2300      	movs	r3, #0
 8001798:	61bb      	str	r3, [r7, #24]
 800179a:	4b3e      	ldr	r3, [pc, #248]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 800179c:	689b      	ldr	r3, [r3, #8]
 800179e:	f003 030c 	and.w	r3, r3, #12
 80017a2:	613b      	str	r3, [r7, #16]
 80017a4:	4b3b      	ldr	r3, [pc, #236]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 80017a6:	68db      	ldr	r3, [r3, #12]
 80017a8:	f003 0303 	and.w	r3, r3, #3
 80017ac:	60fb      	str	r3, [r7, #12]
 80017ae:	693b      	ldr	r3, [r7, #16]
 80017b0:	2b00      	cmp	r3, #0
 80017b2:	d005      	beq.n	80017c0 <HAL_RCC_GetSysClockFreq+0x34>
 80017b4:	693b      	ldr	r3, [r7, #16]
 80017b6:	2b0c      	cmp	r3, #12
 80017b8:	d121      	bne.n	80017fe <HAL_RCC_GetSysClockFreq+0x72>
 80017ba:	68fb      	ldr	r3, [r7, #12]
 80017bc:	2b01      	cmp	r3, #1
 80017be:	d11e      	bne.n	80017fe <HAL_RCC_GetSysClockFreq+0x72>
 80017c0:	4b34      	ldr	r3, [pc, #208]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 80017c2:	681b      	ldr	r3, [r3, #0]
 80017c4:	f003 0308 	and.w	r3, r3, #8
 80017c8:	2b00      	cmp	r3, #0
 80017ca:	d107      	bne.n	80017dc <HAL_RCC_GetSysClockFreq+0x50>
 80017cc:	4b31      	ldr	r3, [pc, #196]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 80017ce:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80017d2:	0a1b      	lsrs	r3, r3, #8
 80017d4:	f003 030f 	and.w	r3, r3, #15
 80017d8:	61fb      	str	r3, [r7, #28]
 80017da:	e005      	b.n	80017e8 <HAL_RCC_GetSysClockFreq+0x5c>
 80017dc:	4b2d      	ldr	r3, [pc, #180]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 80017de:	681b      	ldr	r3, [r3, #0]
 80017e0:	091b      	lsrs	r3, r3, #4
 80017e2:	f003 030f 	and.w	r3, r3, #15
 80017e6:	61fb      	str	r3, [r7, #28]
 80017e8:	4a2b      	ldr	r2, [pc, #172]	@ (8001898 <HAL_RCC_GetSysClockFreq+0x10c>)
 80017ea:	69fb      	ldr	r3, [r7, #28]
 80017ec:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80017f0:	61fb      	str	r3, [r7, #28]
 80017f2:	693b      	ldr	r3, [r7, #16]
 80017f4:	2b00      	cmp	r3, #0
 80017f6:	d10d      	bne.n	8001814 <HAL_RCC_GetSysClockFreq+0x88>
 80017f8:	69fb      	ldr	r3, [r7, #28]
 80017fa:	61bb      	str	r3, [r7, #24]
 80017fc:	e00a      	b.n	8001814 <HAL_RCC_GetSysClockFreq+0x88>
 80017fe:	693b      	ldr	r3, [r7, #16]
 8001800:	2b04      	cmp	r3, #4
 8001802:	d102      	bne.n	800180a <HAL_RCC_GetSysClockFreq+0x7e>
 8001804:	4b25      	ldr	r3, [pc, #148]	@ (800189c <HAL_RCC_GetSysClockFreq+0x110>)
 8001806:	61bb      	str	r3, [r7, #24]
 8001808:	e004      	b.n	8001814 <HAL_RCC_GetSysClockFreq+0x88>
 800180a:	693b      	ldr	r3, [r7, #16]
 800180c:	2b08      	cmp	r3, #8
 800180e:	d101      	bne.n	8001814 <HAL_RCC_GetSysClockFreq+0x88>
 8001810:	4b23      	ldr	r3, [pc, #140]	@ (80018a0 <HAL_RCC_GetSysClockFreq+0x114>)
 8001812:	61bb      	str	r3, [r7, #24]
 8001814:	693b      	ldr	r3, [r7, #16]
 8001816:	2b0c      	cmp	r3, #12
 8001818:	d134      	bne.n	8001884 <HAL_RCC_GetSysClockFreq+0xf8>
 800181a:	4b1e      	ldr	r3, [pc, #120]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 800181c:	68db      	ldr	r3, [r3, #12]
 800181e:	f003 0303 	and.w	r3, r3, #3
 8001822:	60bb      	str	r3, [r7, #8]
 8001824:	68bb      	ldr	r3, [r7, #8]
 8001826:	2b02      	cmp	r3, #2
 8001828:	d003      	beq.n	8001832 <HAL_RCC_GetSysClockFreq+0xa6>
 800182a:	68bb      	ldr	r3, [r7, #8]
 800182c:	2b03      	cmp	r3, #3
 800182e:	d003      	beq.n	8001838 <HAL_RCC_GetSysClockFreq+0xac>
 8001830:	e005      	b.n	800183e <HAL_RCC_GetSysClockFreq+0xb2>
 8001832:	4b1a      	ldr	r3, [pc, #104]	@ (800189c <HAL_RCC_GetSysClockFreq+0x110>)
 8001834:	617b      	str	r3, [r7, #20]
 8001836:	e005      	b.n	8001844 <HAL_RCC_GetSysClockFreq+0xb8>
 8001838:	4b19      	ldr	r3, [pc, #100]	@ (80018a0 <HAL_RCC_GetSysClockFreq+0x114>)
 800183a:	617b      	str	r3, [r7, #20]
 800183c:	e002      	b.n	8001844 <HAL_RCC_GetSysClockFreq+0xb8>
 800183e:	69fb      	ldr	r3, [r7, #28]
 8001840:	617b      	str	r3, [r7, #20]
 8001842:	bf00      	nop
 8001844:	4b13      	ldr	r3, [pc, #76]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 8001846:	68db      	ldr	r3, [r3, #12]
 8001848:	091b      	lsrs	r3, r3, #4
 800184a:	f003 0307 	and.w	r3, r3, #7
 800184e:	3301      	adds	r3, #1
 8001850:	607b      	str	r3, [r7, #4]
 8001852:	4b10      	ldr	r3, [pc, #64]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 8001854:	68db      	ldr	r3, [r3, #12]
 8001856:	0a1b      	lsrs	r3, r3, #8
 8001858:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800185c:	697a      	ldr	r2, [r7, #20]
 800185e:	fb03 f202 	mul.w	r2, r3, r2
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	fbb2 f3f3 	udiv	r3, r2, r3
 8001868:	617b      	str	r3, [r7, #20]
 800186a:	4b0a      	ldr	r3, [pc, #40]	@ (8001894 <HAL_RCC_GetSysClockFreq+0x108>)
 800186c:	68db      	ldr	r3, [r3, #12]
 800186e:	0e5b      	lsrs	r3, r3, #25
 8001870:	f003 0303 	and.w	r3, r3, #3
 8001874:	3301      	adds	r3, #1
 8001876:	005b      	lsls	r3, r3, #1
 8001878:	603b      	str	r3, [r7, #0]
 800187a:	697a      	ldr	r2, [r7, #20]
 800187c:	683b      	ldr	r3, [r7, #0]
 800187e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001882:	61bb      	str	r3, [r7, #24]
 8001884:	69bb      	ldr	r3, [r7, #24]
 8001886:	4618      	mov	r0, r3
 8001888:	3724      	adds	r7, #36	@ 0x24
 800188a:	46bd      	mov	sp, r7
 800188c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001890:	4770      	bx	lr
 8001892:	bf00      	nop
 8001894:	40021000 	.word	0x40021000
 8001898:	080019e4 	.word	0x080019e4
 800189c:	00f42400 	.word	0x00f42400
 80018a0:	007a1200 	.word	0x007a1200

080018a4 <RCC_SetFlashLatencyFromMSIRange>:
 80018a4:	b580      	push	{r7, lr}
 80018a6:	b086      	sub	sp, #24
 80018a8:	af00      	add	r7, sp, #0
 80018aa:	6078      	str	r0, [r7, #4]
 80018ac:	2300      	movs	r3, #0
 80018ae:	613b      	str	r3, [r7, #16]
 80018b0:	4b2a      	ldr	r3, [pc, #168]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018b2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80018b4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80018b8:	2b00      	cmp	r3, #0
 80018ba:	d003      	beq.n	80018c4 <RCC_SetFlashLatencyFromMSIRange+0x20>
 80018bc:	f7ff f9e8 	bl	8000c90 <HAL_PWREx_GetVoltageRange>
 80018c0:	6178      	str	r0, [r7, #20]
 80018c2:	e014      	b.n	80018ee <RCC_SetFlashLatencyFromMSIRange+0x4a>
 80018c4:	4b25      	ldr	r3, [pc, #148]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018c6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80018c8:	4a24      	ldr	r2, [pc, #144]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018ca:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80018ce:	6593      	str	r3, [r2, #88]	@ 0x58
 80018d0:	4b22      	ldr	r3, [pc, #136]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018d2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80018d4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80018d8:	60fb      	str	r3, [r7, #12]
 80018da:	68fb      	ldr	r3, [r7, #12]
 80018dc:	f7ff f9d8 	bl	8000c90 <HAL_PWREx_GetVoltageRange>
 80018e0:	6178      	str	r0, [r7, #20]
 80018e2:	4b1e      	ldr	r3, [pc, #120]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018e4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80018e6:	4a1d      	ldr	r2, [pc, #116]	@ (800195c <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 80018e8:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80018ec:	6593      	str	r3, [r2, #88]	@ 0x58
 80018ee:	697b      	ldr	r3, [r7, #20]
 80018f0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80018f4:	d10b      	bne.n	800190e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	2b80      	cmp	r3, #128	@ 0x80
 80018fa:	d919      	bls.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	2ba0      	cmp	r3, #160	@ 0xa0
 8001900:	d902      	bls.n	8001908 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8001902:	2302      	movs	r3, #2
 8001904:	613b      	str	r3, [r7, #16]
 8001906:	e013      	b.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8001908:	2301      	movs	r3, #1
 800190a:	613b      	str	r3, [r7, #16]
 800190c:	e010      	b.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800190e:	687b      	ldr	r3, [r7, #4]
 8001910:	2b80      	cmp	r3, #128	@ 0x80
 8001912:	d902      	bls.n	800191a <RCC_SetFlashLatencyFromMSIRange+0x76>
 8001914:	2303      	movs	r3, #3
 8001916:	613b      	str	r3, [r7, #16]
 8001918:	e00a      	b.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800191a:	687b      	ldr	r3, [r7, #4]
 800191c:	2b80      	cmp	r3, #128	@ 0x80
 800191e:	d102      	bne.n	8001926 <RCC_SetFlashLatencyFromMSIRange+0x82>
 8001920:	2302      	movs	r3, #2
 8001922:	613b      	str	r3, [r7, #16]
 8001924:	e004      	b.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 8001926:	687b      	ldr	r3, [r7, #4]
 8001928:	2b70      	cmp	r3, #112	@ 0x70
 800192a:	d101      	bne.n	8001930 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 800192c:	2301      	movs	r3, #1
 800192e:	613b      	str	r3, [r7, #16]
 8001930:	4b0b      	ldr	r3, [pc, #44]	@ (8001960 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	f023 0207 	bic.w	r2, r3, #7
 8001938:	4909      	ldr	r1, [pc, #36]	@ (8001960 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 800193a:	693b      	ldr	r3, [r7, #16]
 800193c:	4313      	orrs	r3, r2
 800193e:	600b      	str	r3, [r1, #0]
 8001940:	4b07      	ldr	r3, [pc, #28]	@ (8001960 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 8001942:	681b      	ldr	r3, [r3, #0]
 8001944:	f003 0307 	and.w	r3, r3, #7
 8001948:	693a      	ldr	r2, [r7, #16]
 800194a:	429a      	cmp	r2, r3
 800194c:	d001      	beq.n	8001952 <RCC_SetFlashLatencyFromMSIRange+0xae>
 800194e:	2301      	movs	r3, #1
 8001950:	e000      	b.n	8001954 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 8001952:	2300      	movs	r3, #0
 8001954:	4618      	mov	r0, r3
 8001956:	3718      	adds	r7, #24
 8001958:	46bd      	mov	sp, r7
 800195a:	bd80      	pop	{r7, pc}
 800195c:	40021000 	.word	0x40021000
 8001960:	40022000 	.word	0x40022000

08001964 <memset>:
 8001964:	4402      	add	r2, r0
 8001966:	4603      	mov	r3, r0
 8001968:	4293      	cmp	r3, r2
 800196a:	d100      	bne.n	800196e <memset+0xa>
 800196c:	4770      	bx	lr
 800196e:	f803 1b01 	strb.w	r1, [r3], #1
 8001972:	e7f9      	b.n	8001968 <memset+0x4>

08001974 <__libc_init_array>:
 8001974:	b570      	push	{r4, r5, r6, lr}
 8001976:	4d0d      	ldr	r5, [pc, #52]	@ (80019ac <__libc_init_array+0x38>)
 8001978:	4c0d      	ldr	r4, [pc, #52]	@ (80019b0 <__libc_init_array+0x3c>)
 800197a:	1b64      	subs	r4, r4, r5
 800197c:	10a4      	asrs	r4, r4, #2
 800197e:	2600      	movs	r6, #0
 8001980:	42a6      	cmp	r6, r4
 8001982:	d109      	bne.n	8001998 <__libc_init_array+0x24>
 8001984:	4d0b      	ldr	r5, [pc, #44]	@ (80019b4 <__libc_init_array+0x40>)
 8001986:	4c0c      	ldr	r4, [pc, #48]	@ (80019b8 <__libc_init_array+0x44>)
 8001988:	f000 f818 	bl	80019bc <_init>
 800198c:	1b64      	subs	r4, r4, r5
 800198e:	10a4      	asrs	r4, r4, #2
 8001990:	2600      	movs	r6, #0
 8001992:	42a6      	cmp	r6, r4
 8001994:	d105      	bne.n	80019a2 <__libc_init_array+0x2e>
 8001996:	bd70      	pop	{r4, r5, r6, pc}
 8001998:	f855 3b04 	ldr.w	r3, [r5], #4
 800199c:	4798      	blx	r3
 800199e:	3601      	adds	r6, #1
 80019a0:	e7ee      	b.n	8001980 <__libc_init_array+0xc>
 80019a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80019a6:	4798      	blx	r3
 80019a8:	3601      	adds	r6, #1
 80019aa:	e7f2      	b.n	8001992 <__libc_init_array+0x1e>
 80019ac:	08001a14 	.word	0x08001a14
 80019b0:	08001a14 	.word	0x08001a14
 80019b4:	08001a14 	.word	0x08001a14
 80019b8:	08001a18 	.word	0x08001a18

080019bc <_init>:
 80019bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019be:	bf00      	nop
 80019c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019c2:	bc08      	pop	{r3}
 80019c4:	469e      	mov	lr, r3
 80019c6:	4770      	bx	lr

080019c8 <_fini>:
 80019c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ca:	bf00      	nop
 80019cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019ce:	bc08      	pop	{r3}
 80019d0:	469e      	mov	lr, r3
 80019d2:	4770      	bx	lr
